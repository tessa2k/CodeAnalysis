=== Following is the header of samples/143604/singleDendrite/hoc/sealed_end/pinch_migrator.txt ===
Basic scheme

Each simulation has a length determined by a very narrow (pinched)
diameter at dendrite length X microns from the soma which effectively
electrically ends the dendrite at this pinch.  For each of these X
distances there are vectors for the spatial profile of the maximum bAP
voltage as a function of distance along the dendrite:

max_bAP_ctrl_vec_X.txt
max_bAP_inhib_vec_X.txt

Another vector, distance.txt contains the distance for each
corresponding dendrite compartment (segment or node) in the above
envelope files.

A dendrite_length_vec stores the length of the dendrite for each
simulation as successive elements.

Spine Ca signal measurements:
dCa_inhib_vec.txt
dCa_ctrl_vec.txt
dCa_ratio_vec.txt
dendrite_length_vec.txt (associated with above)

Loop over (pinched) lengths of dendrite:

1) calculate control and inhibition bAP envelope's and Ca peaks and
baselines

2) store vectors in files in folder sealed_end



=== Following is the header of samples/143604/singleDendrite/hoc/multiplerunfit.txt ===
Tools -> MulRunFitter
Generators -> Add Fitness Primitive
Fitness -> Expression
ratio_fitness()

Generators -> Use Generator
(double click on unnamed Fitness Primitive)

Generators  -> Change Name
(double click on unnamed Fitenss Primitive)
Type in "Ratio Fitness"

Parameter -> Add parameter -> global_cm
Parameter -> Add parameter -> global_Ra
Parameter -> Add parameter -> global_g_pas

Domain panel -> make logarithmic
 make limits "1 0.75 1e02"
etc.  choose alternating intervals between optimizations and only select one parameter at a time to optimize to
some percentage (10, or 25%) 



---------------

For optimizing to see if can find Ca channel density in spine with
dendritic inhibition try to see if can get Spine1_dCa_ratio near 75
and Spine0_dCa_ratio near 95.  This is meant to be representative of
inhibition in one spine but not another adjacent one:

error = (Spine1_dCa_ratio-75)^2 + (Spine0_dCa_ratio-95)^2


=== Following is the header of samples/143604/singleDendrite/todo.txt ===
20130317

I need to focus on "cleaning" up the model code to make a public
version for the Science magazine article.

I stored an as-is version as a private model in ModelDB if ever needed
for future reference.

I want to do two things with the public version.

1) make button pushes to create the basic results
a) spine inhibition results in a compartmentalized Ca signal inhibition.
b) dendritic inhibition results in less inhibition amplitude which is
more widespread.

2) make another button push come up with the research panel which
includes instructions on how to recreate the figures from the paper
with button pushes

-----------------------------------------------------------------

Include two readme's

1) the readme.html includes the basic instructions to do 1 above.

2) a readme_research.html includes directions on how to generate the
paper figures and additional "control" simulations (the sealed end
effects and the dendritic inhibition combination with spine neck
resistances that mimic the case where spine inhibition is present (a
result is that the spine neck resistance would have to be ~24 GOhm,
more than a factor of 10 greater than the highest neck resistances
measured (1.2 GOhm) under experimental protocols designed to make the
resistances as large as possible (Grunditz et al. (2008) (in a
different cell type, the hippocampal CA1 pyramidal neuron).

The readme.html can state that: Ca signals were compared between
protocols. The case of bAP alone produces Ca signals in the model
spine heads and dendritic shaft.  The main simulations that support
the paper's hypothesis comes about comparing the bAP alone Ca signals
with two cases 1) inhibition in a spine head combined with a bAP which


=== Following is the header of samples/143604/singleDendrite/readme.html ===
<html><pre>
This is the readme for the model associated with the paper:

Chiu CQ, Lur G, Morse TM, Carnevale NT, Ellis-Davies G, Higley MJ
(2013) Compartmentalization of GABAergic inhibition by dendritic spines.

This is the model these authors used with helpful input from Gordon
Shepherd.

Usage: auto-launch from ModelDB or download, extract, and compile the
mod files with "nrnivmodl mod" (linux/unix), or drag and dropping the
mod folder on the mknrndll icon (Mac OS X), or cd'ing to the mod
folder with mknrndll (mswin). Start the simulation by pressing return
a couple times (during autolaunch to compile and start), drag and
dropping the the mosinit.hoc file on the nrngui icon (Mac OS X), or
double clicking the mosinit.hoc file (mswin).

Additional notes:

1) For publication quality figures, change the time step to 0.025

2) change between a medium diameter dendritic shaft (2 um), as
primarily used in paper or a smaller one (0.7 um) (see buttons).

There are additional details about the model available in the file
MiscModelDetails.txt.
</pre></html>


=== Following is the header of samples/143604/singleDendrite/MiscModelDetails.txt ===
Miscellaneous model details:

1) The two starting cases can be controlled by pushing one of two
buttons in the "Morphology and Spine neck resistivity" control panel
about a third of the way up from the bottom:

a) dendrite diam=2 (look for the diam2_dendrite_gbar_ca)

This is the original dendrite length and ion channels max conductance
configuration for the paper.  The Na and K excitability (maximum
conductances) were raised to a level comfortably above where reliably
propagated bAPs occur (When the conductace is lowered by multiplying
by 0.4 the bAPs decrement as they propagate.  Starting from a
multiplying "factor=0.5" in an init.hoc morpohology control panel,
lowering to "factor=0.2" accomplishes this .4 drop ).  The calcium
maximum conductances were set to where a single bAP accumulated a peak
of 1 uM Ca (suggested by Higley) in an uninhibited spine head.  The
calcium currents do not significantly effect the voltage trajectory so
this setting is arbitrary in regards to the voltage trace.

b) dendrite diam=.7 (look for the diamp7_dendrite_gbar_ca)

The same statements under a) above apply except that the K density
(K_DR mechanism "kv") was boosted to counteract additional excitability of
smaller sized membrane which fires a chain of APs in the chloride
reversal potential = -40 mV numerical experiment.  (The real
experiments do not have a train of APs in this case).

---

On the length of the dendrite choice:

We use the dendrite L=600 micron version to avoid bAP peaks growing
per distance from the soma (confounding the studies of inhibition) as
occur in the L=200 case.  In L=200 the bAP peaks grow as they
propagate through the distances that the spines are placed, close to
the end of the cylinder.  We assume in the real neurons decreasing
sodium channels or increasing K channels likely maintain constant
height of bAPs as they propagate since experimentally the peak Ca
signals in spines are distance independent (Figure S3c).  We could


=== Following is the header of samples/143604/singleDendrite/multiconditions/peaks.txt ===
./bAPinhibspine/spine2_cai.txt	119.3	0.000568581
./bAPinhibspine/dend_cai.txt	119.1	0.000564589
./bAPinhibspine/spine1_cai.txt	118.85	0.000295499
./bAPinhibspine/spine0_cai.txt	118.9	0.000558924
./spineinhibEClm40/spine2_cai.txt	170.55	0.000723605
./spineinhibEClm40/dend_cai.txt	170.45	0.0007442
./spineinhibEClm40/spine1_cai.txt	170.65	0.000624029
./spineinhibEClm40/spine0_cai.txt	170.35	0.000755628
./bAP1xinhibdend/spine2_cai.txt	119.3	0.000563574
./bAP1xinhibdend/dend_cai.txt	119.1	0.000559956
./bAP1xinhibdend/spine1_cai.txt	119.1	0.000557293
./bAP1xinhibdend/spine0_cai.txt	118.9	0.000555318
./bAP/spine2_cai.txt	119.3	0.000588075
./bAP/dend_cai.txt	119.1	0.000582838
./bAP/spine1_cai.txt	119.1	0.000580314
./bAP/spine0_cai.txt	118.95	0.000572942
./bAPinhibdend/spine2_cai.txt	118.35	0.000297664
./bAPinhibdend/dend_cai.txt	118.25	0.000316404
./bAPinhibdend/spine1_cai.txt	118.25	0.000313358
./bAPinhibdend/spine0_cai.txt	118.15	0.000362539
./inhibdend/spine2_cai.txt	99.95	0.000100006
./inhibdend/dend_cai.txt	99.95	0.000100006
./inhibdend/spine1_cai.txt	99.95	0.000100006
./inhibdend/spine0_cai.txt	99.95	0.000100006
./1xinhibdend/spine2_cai.txt	499.95	0.00010001
./1xinhibdend/dend_cai.txt	499.95	0.00010001
./1xinhibdend/spine1_cai.txt	499.95	0.00010001
./1xinhibdend/spine0_cai.txt	499.95	0.00010001
./inhibspine/spine2_cai.txt	499.95	0.000100011
./inhibspine/dend_cai.txt	499.95	0.000100011
./inhibspine/spine1_cai.txt	499.95	0.00010001
./inhibspine/spine0_cai.txt	499.95	0.00010001


=== Following is the header of samples/143604/singleDendrite/multiconditions/make_dCa.py ===
#!/usr/bin/python
# make_dCa.py
# will print out the Delta Ca's for the subfolders
# run
# ./make_peaks.sh > peaks.txt
# whos file peaks.txt is read by this program as well as baselines.txt

import os, os.path

#for root, dirs, files in os.walk('.'):
#   for f in files:
#     cai_file_fullpath = os.path.join(root, f)
#     if 'cai' in f:
#       print cai_file_fullpath

# that's nice but read the peaks.txt file and calculate everything from that
f=open('peaks.txt','r')
for line in f:
  contents = line.split('\t')
  cai_peak_with_newline = contents[2]
  cai_peak = cai_peak_with_newline.replace('\n','')
  # print contents[0]+" has peak "+cai_peak+" at time "+contents[1]
  Delta_Ca = str(eval(cai_peak+"-1e-4"))
  print contents[0]+" has (peak) Delta Ca = "+Delta_Ca+" at time "+contents[1]
  


=== Following is the header of samples/143604/singleDendrite/multiconditions/matlab/dCa_ratio.m ===
% dCa_ratio.m:
%  will calculate dCa(inhibitied)/dCa(control)
% apparently can do it by just reading data files generated in the multiconditions.
% Baseline check:  First read the Ca baseline in the five protocol folders
% bAP  bAPinhibdend  bAPinhibspine  inhibdend  inhibspine
% these come from Ca trace files which have names like:
% ./multiconditions/bAPinhibspine/dend_cai.txt
% ./multiconditions/bAPinhibspine/spine0_cai.txt
% ./multiconditions/bAPinhibspine/spine1_cai.txt
% ./multiconditions/bAPinhibspine/spine2_cai.txt
%
% Assign the name prestimulus_time to the time step (in the large 0.05
% ms time step increments so that it works for both that and the small
% 0.025 ms time steps) just prior to the inhibition and therefore also
% prior to the bAP.  Print out the Ca values in these traces at these
% times.
%
% the time of the trigger of the bAP is 115 ms (PointProcessGroupManager
% MultiClamp[0]). The time of the inihibitory synapse activation is
% 100 ms (NetStim in "Exp2Syn Synaptic Stimulation Control" box).

% read in files and transfer vectors from
% proto_dir/filename to variable name proto_dir_filename
%
% the passive multiconditions results

load ../../multiconditions_pas_spine/bAP/dend_cai.txt
load ../../multiconditions_pas_spine/bAP/dend_v.txt
load ../../multiconditions_pas_spine/bAP/spine0_cai.txt
load ../../multiconditions_pas_spine/bAP/spine0_v.txt
load ../../multiconditions_pas_spine/bAP/spine1_cai.txt
load ../../multiconditions_pas_spine/bAP/spine1_v.txt
load ../../multiconditions_pas_spine/bAP/spine2_cai.txt
load ../../multiconditions_pas_spine/bAP/spine2_v.txt

bAP_dend_cai_pas=dend_cai;
bAP_dend_v_pas=dend_v;
bAP_spine0_cai_pas=spine0_cai;
bAP_spine0_v_pas=spine0_v;
bAP_spine1_cai_pas=spine1_cai;


=== Following is the header of samples/143604/singleDendrite/multiconditions/matlab/graph_Ca_inhb_AP_IPSPAP.m ===
% bAP alone with paired IPSP-bAP
% load bAP alone, then bAP with inhib. in spine
cd f:\share\projects\HigleyLab\Responses2Reviewers\20121009\singleDendrite\5conditions
load bAP/spine1_cai.txt;
load bAP/spine1_v.txt;
bAP_spine1_cai=spine1_cai;
bAP_spine1_v=spine1_v;

load bAPinhibspine/spine1_cai.txt;
bAPinhibspine_spine1_cai = spine1_cai;
load bAPinhibspine/spine1_v.txt;
bAPinhibspine_spine1_v = spine1_v;

figure 
hold on
plot(bAP_spine1_cai(:,1), bAP_spine1_cai(:,2),'k');
plot(bAPinhibspine_spine1_cai(:,1), bAPinhibspine_spine1_cai(:,2),'r');
% title('Model [Ca2+]')
axis off
% 1 uM by 100 ms plot([0 0 100]+200,[1e-3 0 0]+5e-4)
% 0.3 uM by 100 ms scale bar:
plot([0 0 100]+375,[0.3e-3 0 0]+7e-4,'k')
cd matlab


=== Following is the header of samples/143604/singleDendrite/multiconditions/matlab/fig5.m ===
% posterFig5.m
% same as fig4.hoc
cd 'f:\share\projects\HigleyLab\Responses2Reviewers\20121009\singleDendrite\fig4'

% for reference in case want to include it
load F:\share\projects\HigleyLab\Responses2Reviewers\20121009\singleDendrite\5conditions\bAP\spine1_cai.txt
APalone_spine1_ca1=spine1_cai;

load dend_cai.txt
load spine0_cai.txt
load spine1_cai.txt
load spine2_cai.txt

load dend_v.txt
load spine0_v.txt
load spine1_v.txt
load spine2_v.txt

figure
subplot(1,2,1)
hold on
plot(spine0_cai(:,1),spine0_cai(:,2),'k') %
plot(spine1_cai(:,1),spine1_cai(:,2),'g') %
plot(spine2_cai(:,1),spine2_cai(:,2),'b') %
plot(dend_cai(:,1),dend_cai(:,2),'r') %
axis off
% 0.3 uM by 100 ms scale bar:
plot([0 0 100]+350,[0.3e-3 0 0]+5.5e-4,'k')

subplot(1,2,2)
hold on
plot(spine0_v(:,1),spine0_v(:,2),'k')
plot(spine1_v(:,1),spine1_v(:,2),'g')
plot(spine2_v(:,1),spine2_v(:,2),'b')
plot(dend_v(:,1),dend_v(:,2),'r')
plot([0 0 2]+118,[10 0 0]-50,'k') % scale bar 10 ms horiz, 10 mV vertical
axis([114 120 -75 10])
axis off
cd F:\share\projects\HigleyLab\Responses2Reviewers\20121009\singleDendrite\5conditions\matlab


=== Following is the header of samples/143604/singleDendrite/multiconditions/matlab/compare_bAPinhibspine_pass_signals.m ===
% read in files and transfer vectors from
% proto_dir/filename to variable name proto_dir_filename
%
% Assume we are starting in the passive 5conditions results

load ../bAPinhibspine/dend_cai.txt
load ../bAPinhibspine/dend_v.txt
load ../bAPinhibspine/spine0_cai.txt
load ../bAPinhibspine/spine0_v.txt
load ../bAPinhibspine/spine1_cai.txt
load ../bAPinhibspine/spine1_v.txt
load ../bAPinhibspine/spine2_cai.txt
load ../bAPinhibspine/spine2_v.txt

bAPinhibspine_dend_cai_pas=dend_cai;
bAPinhibspine_dend_v_pas=dend_v;
bAPinhibspine_spine0_cai_pas=spine0_cai;
bAPinhibspine_spine0_v_pas=spine0_v;
bAPinhibspine_spine1_cai_pas=spine1_cai;
bAPinhibspine_spine1_v_pas=spine1_v;
bAPinhibspine_spine2_cai_pas=spine2_cai;
bAPinhibspine_spine2_v_pas=spine2_v;

% now read in active versions

load ../../5conditions_act_spine/bAPinhibspine/dend_cai.txt
load ../../5conditions_act_spine/bAPinhibspine/dend_v.txt
load ../../5conditions_act_spine/bAPinhibspine/spine0_cai.txt
load ../../5conditions_act_spine/bAPinhibspine/spine0_v.txt
load ../../5conditions_act_spine/bAPinhibspine/spine1_cai.txt
load ../../5conditions_act_spine/bAPinhibspine/spine1_v.txt
load ../../5conditions_act_spine/bAPinhibspine/spine2_cai.txt
load ../../5conditions_act_spine/bAPinhibspine/spine2_v.txt

bAPinhibspine_dend_cai_act=dend_cai;
bAPinhibspine_dend_v_act=dend_v;
bAPinhibspine_spine0_cai_act=spine0_cai;
bAPinhibspine_spine0_v_act=spine0_v;
bAPinhibspine_spine1_cai_act=spine1_cai;
bAPinhibspine_spine1_v_act=spine1_v;


=== Following is the header of samples/143604/singleDendrite/multiconditions/matlab/PosterFig4.m ===
% posterFig4.m
% same as fig3.hoc
cd 'f:\share\projects\HigleyLab\Responses2Reviewers\20121009\singleDendrite\fig3'
load head0.txt
load head1.txt
load head2.txt
load F:\share\projects\HigleyLab\Responses2Reviewers\20121009\singleDendrite\5conditions\bAP\spine1_cai.txt
figure
hold on
plot(spine1_cai(:,1),spine1_cai(:,2),'k') % AP alone case
plot(head0(:,1),head0(:,2),'g') % neighbor (90 um from soma) to inhibited spine
plot(head1(:,1),head1(:,2),'r') % 100 um to soma inhibited spine
plot(head2(:,1),head2(:,2),'b') % 110 um to soma inhibited spine
% 0.3 uM by 100 ms scale bar:
plot([0 0 100]+350,[0.3e-3 0 0]+5.5e-4,'k')
axis off
cd F:\share\projects\HigleyLab\Responses2Reviewers\20121009\singleDendrite\5conditions\matlab


=== Following is the header of samples/143604/singleDendrite/multiconditions/matlab/graph_files.m ===
% read in files and transfer vectors from
% proto_dir/filename to variable name proto_dir_filename

load ../bAP/dend_cai.txt
load ../bAP/dend_v.txt
load ../bAP/spine0_cai.txt
load ../bAP/spine0_v.txt
load ../bAP/spine1_cai.txt
load ../bAP/spine1_v.txt
load ../bAP/spine2_cai.txt
load ../bAP/spine2_v.txt

bAP_dend_cai=dend_cai;
bAP_dend_v=dend_v;
bAP_spine0_cai=spine0_cai;
bAP_spine0_v=spine0_v;
bAP_spine1_cai=spine1_cai;
bAP_spine1_v=spine1_v;
bAP_spine2_cai=spine2_cai;
bAP_spine2_v=spine2_v;

load ../bAPinhibdend/dend_cai.txt
load ../bAPinhibdend/dend_v.txt
load ../bAPinhibdend/spine0_cai.txt
load ../bAPinhibdend/spine0_v.txt
load ../bAPinhibdend/spine1_cai.txt
load ../bAPinhibdend/spine1_v.txt
load ../bAPinhibdend/spine2_cai.txt
load ../bAPinhibdend/spine2_v.txt

bAPinhibdend_dend_cai=dend_cai;
bAPinhibdend_dend_v=dend_v;
bAPinhibdend_spine0_cai=spine0_cai;
bAPinhibdend_spine0_v=spine0_v;
bAPinhibdend_spine1_cai=spine1_cai;
bAPinhibdend_spine1_v=spine1_v;
bAPinhibdend_spine2_cai=spine2_cai;
bAPinhibdend_spine2_v=spine2_v;

load ../bAPinhibspine/dend_cai.txt


=== Following is the header of samples/143604/singleDendrite/multiconditions/matlab/compare_bAPinhibspine_act_vs_pass.m ===
% read in files and transfer vectors from
% proto_dir/filename to variable name proto_dir_filename
%
% Assume we are starting in the passive 5conditions results

load ../bAPinhibspine/dend_cai.txt
load ../bAPinhibspine/dend_v.txt
load ../bAPinhibspine/spine0_cai.txt
load ../bAPinhibspine/spine0_v.txt
load ../bAPinhibspine/spine1_cai.txt
load ../bAPinhibspine/spine1_v.txt
load ../bAPinhibspine/spine2_cai.txt
load ../bAPinhibspine/spine2_v.txt

bAPinhibspine_dend_cai_pas=dend_cai;
bAPinhibspine_dend_v_pas=dend_v;
bAPinhibspine_spine0_cai_pas=spine0_cai;
bAPinhibspine_spine0_v_pas=spine0_v;
bAPinhibspine_spine1_cai_pas=spine1_cai;
bAPinhibspine_spine1_v_pas=spine1_v;
bAPinhibspine_spine2_cai_pas=spine2_cai;
bAPinhibspine_spine2_v_pas=spine2_v;

% now read in active versions

load ../../5conditions_act_spine/bAPinhibspine/dend_cai.txt
load ../../5conditions_act_spine/bAPinhibspine/dend_v.txt
load ../../5conditions_act_spine/bAPinhibspine/spine0_cai.txt
load ../../5conditions_act_spine/bAPinhibspine/spine0_v.txt
load ../../5conditions_act_spine/bAPinhibspine/spine1_cai.txt
load ../../5conditions_act_spine/bAPinhibspine/spine1_v.txt
load ../../5conditions_act_spine/bAPinhibspine/spine2_cai.txt
load ../../5conditions_act_spine/bAPinhibspine/spine2_v.txt

bAPinhibspine_dend_cai_act=dend_cai;
bAPinhibspine_dend_v_act=dend_v;
bAPinhibspine_spine0_cai_act=spine0_cai;
bAPinhibspine_spine0_v_act=spine0_v;
bAPinhibspine_spine1_cai_act=spine1_cai;
bAPinhibspine_spine1_v_act=spine1_v;


=== Following is the header of samples/143604/singleDendrite/multiconditions/matlab/posterFig3_inhib_depends_on_neck.m ===
% poster fig 3 SfN2012 from fig2.hoc
cd 'f:\share\projects\HigleyLab\Responses2Reviewers\20121009\singleDendrite\fig2'
load head1_0p05.txt
load head1_0p07.txt
load head1_0p10.txt
load head1_0p15.txt
load head1_0p20.txt
% for comparison with an unihibited trace:
load F:\share\projects\HigleyLab\Responses2Reviewers\20121009\singleDendrite\5conditions\bAP\spine1_cai.txt
figure
hold on
plot(spine1_cai(:,1),spine1_cai(:,2),'k')
plot(head1_0p05(:,1),head1_0p05(:,2),'r')
plot(head1_0p07(:,1),head1_0p07(:,2),'r')
plot(head1_0p10(:,1),head1_0p10(:,2),'r')
plot(head1_0p15(:,1),head1_0p15(:,2),'r')
plot(head1_0p20(:,1),head1_0p20(:,2),'r')
% 0.3 uM by 100 ms scale bar:
plot([0 0 100]+350,[0.3e-3 0 0]+5.5e-4,'k')
axis off
cd F:\share\projects\HigleyLab\Responses2Reviewers\20121009\singleDendrite\5conditions\matlab


=== Following is the header of samples/143604/singleDendrite/multiconditions/baselines.txt ===
0.000100006


=== Following is the header of samples/143604/singleDendrite/sealed_end/explanation_for_these_subfolders.txt ===
Explanation of these folders:

./bAPdecay/ ./matlab/ ./pas_dend/ ./pinch_moves/ ./spines_move/ 

The pinch_moves is the default model with the method of the lengthening the dendrite from the distal spine
to the original length of 600 um.  All the other folders keep the dendrite a fixed length and
move the 3 spines along the dendrite.

The spines_move folder is done with the default spine model, and the bAPdecay and pas_dend hold
the results with models that contain half the na k (bAPdecay) and with zero na k channels in the
dendrite (pas_dend).

In each folder the model is run twice with 


=== Following is the header of samples/143604/singleDendrite/sealed_end/matlab/peak_bAP_grapher.m ===
% peak_bAP_grapher.m
% graphs stored peak bAP voltage to study sealed_end effect
figure
hold on

for i=1:149
cmd=['load max_bAP_ctrl_' num2str(i) '.txt;'];
eval(cmd)
end

for trace=1:10:149
cmd=['X=max_bAP_ctrl_' num2str(trace) '(:,1);'];
% disp(cmd)
eval(cmd)
for i=1:2
Y(1, i)=trace + 1.5 - i;
for j=1:length(X)
cmd = ['Z(i,j)=max_bAP_ctrl_' num2str(trace) '(j,2);'];
eval(cmd)
end
end
if j<length(Z)
    Z(:,j+1:end)=[]; % resizes Z if necessary
end
surf(X, Y, Z)
end

=== Following is the header of samples/143604/singleDendrite/mod/distr.mod ===
TITLE ...just to store peak membrane voltage
: M.Migliore June 2001
: T Morse February 2010 added times of occurence

UNITS {
	(mA) = (milliamp)
	(mV) = (millivolt)

}

PARAMETER {
	v (mV)
}


NEURON {
	SUFFIX ds
        RANGE vmax, tmax
}

ASSIGNED {
	vmax
	tmax
}

INITIAL {
	vmax=v
}


BREAKPOINT {
	if (v>vmax) {vmax=v tmax=t}
}


=== Following is the header of samples/143604/singleDendrite/mod/kca.mod ===

COMMENT
26 Ago 2002 Modification of original channel to allow variable time step and to correct an initialization error.
    Done by Michael Hines(michael.hines@yale.e) and Ruggero Scorcioni(rscorcio@gmu.edu) at EU Advance Course in Computational Neuroscience. Obidos, Portugal

kca.mod

Calcium-dependent potassium channel
Based on
Pennefather (1990) -- sympathetic ganglion cells
taken from
Reuveni et al (1993) -- neocortical cells

Author: Zach Mainen, Salk Institute, 1995, zach@salk.edu
	
ENDCOMMENT

INDEPENDENT {t FROM 0 TO 1 WITH 1 (ms)}

NEURON {
	SUFFIX kca
	USEION k READ ek WRITE ik
	USEION ca READ cai
	RANGE n, gk, gbar
	RANGE ninf, ntau
	GLOBAL Ra, Rb, caix
	GLOBAL q10, temp, tadj, vmin, vmax
}

UNITS {
	(mA) = (milliamp)
	(mV) = (millivolt)
	(pS) = (picosiemens)
	(um) = (micron)
} 

PARAMETER {
	gbar = 10   	(pS/um2)	: 0.03 mho/cm2
	v 		(mV)
	cai  		(mM)


=== Following is the header of samples/143604/singleDendrite/mod/km.mod ===

COMMENT
26 Ago 2002 Modification of original channel to allow variable time step and to correct an initialization error.
    Done by Michael Hines(michael.hines@yale.e) and Ruggero Scorcioni(rscorcio@gmu.edu) at EU Advance Course in Computational Neuroscience. Obidos, Portugal

km.mod

Potassium channel, Hodgkin-Huxley style kinetics
Based on I-M (muscarinic K channel)
Slow, noninactivating

Author: Zach Mainen, Salk Institute, 1995, zach@salk.edu
	
ENDCOMMENT

INDEPENDENT {t FROM 0 TO 1 WITH 1 (ms)}

NEURON {
	SUFFIX km
	USEION k READ ek WRITE ik
	RANGE n, gk, gbar
	RANGE ninf, ntau
	GLOBAL Ra, Rb
	GLOBAL q10, temp, tadj, vmin, vmax
}

UNITS {
	(mA) = (milliamp)
	(mV) = (millivolt)
	(pS) = (picosiemens)
	(um) = (micron)
} 

PARAMETER {
	gbar = 10   	(pS/um2)	: 0.03 mho/cm2
	v 		(mV)
								
	tha  = -30	(mV)		: v 1/2 for inf
	qa   = 9	(mV)		: inf slope		
	


=== Following is the header of samples/143604/singleDendrite/mod/cad.mod ===

:26 Ago 2002 Modification of original channel to allow variable time step and to correct an initialization error.
:    Done by Michael Hines(michael.hines@yale.e) and Ruggero Scorcioni(rscorcio@gmu.edu) at EU Advance Course in Computational Neuroscience. Obidos, Portugal
 



TITLE decay of internal calcium concentration
:
: Internal calcium concentration due to calcium currents and pump.
: Differential equations.
:
: Simple model of ATPase pump with 3 kinetic constants (Destexhe 92)
:     Cai + P <-> CaP -> Cao + P  (k1,k2,k3)
: A Michaelis-Menten approximation is assumed, which reduces the complexity
: of the system to 2 parameters: 
:       kt = <tot enzyme concentration> * k3  -> TIME CONSTANT OF THE PUMP
:	kd = k2/k1 (dissociation constant)    -> EQUILIBRIUM CALCIUM VALUE
: The values of these parameters are chosen assuming a high affinity of 
: the pump to calcium and a low transport capacity (cfr. Blaustein, 
: TINS, 11: 438, 1988, and references therein).  
:
: Units checked using "modlunit" -> factor 10000 needed in ca entry
:
: VERSION OF PUMP + DECAY (decay can be viewed as simplified buffering)
:
: All variables are range variables
:
:
: This mechanism was published in:  Destexhe, A. Babloyantz, A. and 
: Sejnowski, TJ.  Ionic mechanisms for intrinsic slow oscillations in
: thalamic relay neurons. Biophys. J. 65: 1538-1552, 1993)
:
: Written by Alain Destexhe, Salk Institute, Nov 12, 1992
:

INDEPENDENT {t FROM 0 TO 1 WITH 1 (ms)}

NEURON {
	SUFFIX cad


=== Following is the header of samples/143604/singleDendrite/mod/na.mod ===

COMMENT
26 Ago 2002 Modification of original channel to allow variable time step and to correct an initialization error.
    Done by Michael Hines(michael.hines@yale.e) and Ruggero Scorcioni(rscorcio@gmu.edu) at EU Advance Course in Computational Neuroscience. Obidos, Portugal


na.mod

Sodium channel, Hodgkin-Huxley style kinetics.  

Kinetics were fit to data from Huguenard et al. (1988) and Hamill et
al. (1991)

qi is not well constrained by the data, since there are no points
between -80 and -55.  So this was fixed at 5 while the thi1,thi2,Rg,Rd
were optimized using a simplex least square proc

voltage dependencies are shifted approximately from the best
fit to give higher threshold

Author: Zach Mainen, Salk Institute, 1994, zach@salk.edu

ENDCOMMENT

INDEPENDENT {t FROM 0 TO 1 WITH 1 (ms)}

NEURON {
	SUFFIX na
	USEION na READ ena WRITE ina
	RANGE m, h, gna, gbar
	GLOBAL tha, thi1, thi2, qa, qi, qinf, thinf
	RANGE minf, hinf, mtau, htau
	GLOBAL Ra, Rb, Rd, Rg
	GLOBAL q10, temp, tadj, vmin, vmax, vshift
}

PARAMETER {
	gbar = 1000   	(pS/um2)	: 0.12 mho/cm2
	vshift = -10	(mV)		: voltage shift (affects all)
								


=== Following is the header of samples/143604/singleDendrite/mod/multiclamp.mod ===
COMMENT
  multiclamp.mod
  Generates a train of symmetrically trapezoidal current changes.
  User specifies trf (duration of rise/fall ramps), tp (duration of plateau),
  del (onset of first trapezoid), per (period, i.e. interval between trapezoid onsets), 
  and number of trapezoids.
  Ensures that period is longer than trapezoid duration.
  4/1/2012 NTC modified from TrapSyn.mod on 4/2/2012 TMM
ENDCOMMENT

NEURON {
  POINT_PROCESS MultIClamp
  ELECTRODE_CURRENT i
  RANGE trf, tp
  RANGE del, per, number
  RANGE amp, i
:  NONSPECIFIC_CURRENT i
}

UNITS {
  (mV) = (millivolt)
  (nS) = (nanosiemens)
  (nA) = (nanoamp)
}

PARAMETER {
  trf (ms) <0, 1e9> : duration of rising and falling phases
  tp  (ms) <0, 1e9> : duration of plateau
  del (ms) <0, 1e9> : latency of first transient
  per (ms) <0, 1e9> : period, i.e. interval between transient onsets
  number : how many to deliver
  amp (nA) <0, 1e9> : conductance during plateau
}

ASSIGNED {
  v (mV)
  i (nA)
  on
  tally : how many more to deliver
  m (1/ms)


=== Following is the header of samples/143604/singleDendrite/mod/exp2synsat.mod ===
COMMENT
Two state kinetic scheme synapse described by rise time tau1,
and decay time constant tau2. The normalized peak condunductance is 1.
Decay time MUST be greater than rise time.

The solution of A->G->bath with rate constants 1/tau1 and 1/tau2 is
 A = a*exp(-t/tau1) and
 G = a*tau2/(tau2-tau1)*(-exp(-t/tau1) + exp(-t/tau2))
	where tau1 < tau2

If tau2-tau1 -> 0 then we have a alphasynapse.
and if tau1 -> 0 then we have just single exponential decay.

The factor is evaluated in the
initial block such that an event of weight 1 generates a
peak conductance of 1.

Because the solution is a sum of exponentials, the
coupled equations can be solved as a pair of independent equations
by the more efficient cnexp method.

20120413 TMM modified to include conductance saturation: the
conductance, g, will not exceed "saturation"; however when simulated
past saturation, g will take longer to drop back below saturation.

ENDCOMMENT

NEURON {
	POINT_PROCESS Exp2SynSat
	RANGE tau1, tau2, e, i, saturation
	NONSPECIFIC_CURRENT i

	RANGE g
}

UNITS {
	(nA) = (nanoamp)
	(mV) = (millivolt)
	(uS) = (microsiemens)
}


=== Following is the header of samples/143604/singleDendrite/mod/ca.mod ===

COMMENT
26 Ago 2002 Modification of original channel to allow variable time step and to correct an initialization error.
    Done by Michael Hines(michael.hines@yale.e) and Ruggero Scorcioni(rscorcio@gmu.edu) at EU Advance Course in Computational Neuroscience. Obidos, Portugal

ca.mod
Uses fixed eca instead of GHK eqn

HVA Ca current
Based on Reuveni, Friedman, Amitai and Gutnick (1993) J. Neurosci. 13:
4609-4621.

Author: Zach Mainen, Salk Institute, 1994, zach@salk.edu

ENDCOMMENT

:INDEPENDENT {t FROM 0 TO 1 WITH 1 (ms)}

NEURON {
	SUFFIX ca
	USEION ca READ eca WRITE ica
	RANGE m, h, gca, gbar, ica
	RANGE minf, hinf, mtau, htau
	GLOBAL q10, temp, tadj, vmin, vmax, vshift, mshift
}

PARAMETER {
	gbar = 0.1   	(pS/um2)	: 0.12 mho/cm2
	vshift = 0	(mV)		: voltage shift (affects all)
	mshift = 0	(mV)		: voltage shift (affects all)

	cao  = 2.5	(mM)	        : external ca concentration
	cai		(mM)
						
	temp = 23	(degC)		: original temp 
	q10  = 2.3			: temperature sensitivity

	v 		(mV)
	dt		(ms)
	celsius		(degC)


=== Following is the header of samples/143604/singleDendrite/mod/ca_a1g.mod ===
TITLE CaT channel alpha-1G from McRory et al, 2001
: Reversal potential described by Nernst equation
: M.Migliore Jan 2003

UNITS {
	(mA) = (milliamp)
	(mV) = (millivolt)
	(molar) = (1/liter)
	(mM) = (millimolar)
	FARADAY = (faraday) (coulomb)
	R = (k-mole) (joule/degC)
}

PARAMETER {
	v (mV)
	celsius		(degC)
	gbar=.008 (mho/cm2)
        vhalfn=-51.73   (mV)
        vhalfl=-85.4   (mV)
        kn=6.53   (1)
        kl=-5.4   (1)
	q10=2.3
	cai 	= 0.00665315 (mM): .00005 (mM)	: initial [Ca]i = 50 nM
	cao 	= 2	(mM)	: [Ca]o = 2 mM
	eca
}


NEURON {
	SUFFIX cat1g
	USEION ca READ eca WRITE ica
        RANGE gbar, carev, ica
        GLOBAL ninf,linf,taul,taun, q10
}

STATE {
	n
        l
}



=== Following is the header of samples/143604/singleDendrite/mod/constant.mod ===
: constant current for initialization to a specific membrane potential

NEURON {
	SUFFIX constant
	NONSPECIFIC_CURRENT i
	RANGE i, ic
}

UNITS {
	(mA) = (milliamp)
}

PARAMETER {
	ic = 0 (mA/cm2)
}

ASSIGNED {
	i (mA/cm2)
}

INITIAL {
	i = ic
}

BREAKPOINT {
	i = ic
}


=== Following is the header of samples/143604/singleDendrite/mod/ca_a1h.mod ===
TITLE CaT channel alpha-1H from McRory et al, 2001
: Reversal potential described by Nernst equation
: M.Migliore Jan 2003

UNITS {
	(mA) = (milliamp)
	(mV) = (millivolt)
	(molar) = (1/liter)
	(mM) = (millimolar)
	FARADAY = (faraday) (coulomb)
	R = (k-mole) (joule/degC)
}

PARAMETER {
	v (mV)
	celsius		(degC)
	gbar=.008 (mho/cm2)
        vhalfn=-43.15   (mV)
        vhalfl=-73.9   (mV)
        kn=5.34   (1)
        kl=-2.76   (1)
	q10=2.3
	cai 	= .00005 (mM)	: initial [Ca]i = 50 nM
	cao 	= 2	(mM)	: [Ca]o = 2 mM
	eca
}


NEURON {
	SUFFIX cat1h
	USEION ca READ eca WRITE ica
        RANGE gbar, carev
        GLOBAL ninf,linf,taul,taun, q10
}

STATE {
	n
        l
}



=== Following is the header of samples/143604/singleDendrite/mod/zoidsyn.mod ===
COMMENT
  zoidsyn.mod
  Generates a train of symmetrically trapeZoidal conductance changes.
  User specifies trf (duration of rise/fall ramps), tp (duration of plateau),
  start (onset of first trapezoid), interval, i.e. period between 
  trapezoid onsets), and number of trapezoids.
  Error checking in INIT block ensures that interval is longer 
  than trapezoid duration.
  4/1/2012 NTC, minor modifications 4/3/2012 TMM
ENDCOMMENT

NEURON {
  POINT_PROCESS ZoidSyn
  RANGE trf, tp
  RANGE start, interval, number
  RANGE e, gmax, g, i
  NONSPECIFIC_CURRENT i
}

UNITS {
  (mV) = (millivolt)
  (nS) = (nanosiemens)
  (nA) = (nanoamp)
}

PARAMETER {
  trf (ms) <0, 1e9> : duration of rising and falling phases
  tp  (ms) <0, 1e9> : duration of plateau
  start (ms) <0, 1e9> : latency of first transient
  interval (ms) <0, 1e9> : period, i.e. interval between transient onsets
  number : how many to deliver
  e   (mV) : reversal potential
  gmax (nS) <0, 1e9> : conductance during plateau
}

ASSIGNED {
  v (mV)
  i (nA)
  on
  tally : how many more to deliver


=== Following is the header of samples/143604/singleDendrite/mod/im.mod ===
TITLE slowly activating potassium current (M-current)

COMMENT
        *********************************************
        reference:   	Yamada, Koch & Adams (1989) 
			Methods in Neuronal Modeling, MIT press
        found in:       bullfrog sympathetic ganglion cells
        *********************************************
	Assembled for MyFirstNEURON by Arthur Houweling
ENDCOMMENT

INDEPENDENT {t FROM 0 TO 1 WITH 1 (ms)}

NEURON {
	SUFFIX iM
	USEION k READ ek WRITE ik 
        RANGE gkbar, m_inf, tau_m, ik
}

UNITS {
	(mA) = (milliamp)
	(mV) = (millivolt)
}

PARAMETER {
	v		(mV)
	celsius		(degC)
        dt              (ms)
	ek		(mV)
	gkbar= 0.00031	(mho/cm2)
:	gkbar= 0.0006	(mho/cm2)
}

STATE {
	m
}

ASSIGNED {
	ik		(mA/cm2)
	m_inf


=== Following is the header of samples/143604/singleDendrite/mod/kv.mod ===

COMMENT
26 Ago 2002 Modification of original channel to allow variable time step and to correct an initialization error.
    Done by Michael Hines(michael.hines@yale.e) and Ruggero Scorcioni(rscorcio@gmu.edu) at EU Advance Course in Computational Neuroscience. Obidos, Portugal

kv.mod

Potassium channel, Hodgkin-Huxley style kinetics
Kinetic rates based roughly on Sah et al. and Hamill et al. (1991)

Author: Zach Mainen, Salk Institute, 1995, zach@salk.edu
	
ENDCOMMENT

INDEPENDENT {t FROM 0 TO 1 WITH 1 (ms)}

NEURON {
	SUFFIX kv
	USEION k READ ek WRITE ik
	RANGE n, gk, gbar
	RANGE ninf, ntau
	GLOBAL Ra, Rb
	GLOBAL q10, temp, tadj, vmin, vmax
}

UNITS {
	(mA) = (milliamp)
	(mV) = (millivolt)
	(pS) = (picosiemens)
	(um) = (micron)
} 

PARAMETER {
	gbar = 5   	(pS/um2)	: 0.03 mho/cm2
	v 		(mV)
								
	tha  = 25	(mV)		: v 1/2 for inf
	qa   = 9	(mV)		: inf slope		
	
	Ra   = 0.02	(/ms)		: max act rate


=== Following is the header of samples/143604/singleDendrite/mod/exp2syncur.mod ===
COMMENT
Two state kinetic scheme synapse described by rise time tau1,
and decay time constant tau2. The normalized peak condunductance is 1.
Decay time MUST be greater than rise time.

The solution of A->G->bath with rate constants 1/tau1 and 1/tau2 is
 A = a*exp(-t/tau1) and
 G = a*tau2/(tau2-tau1)*(-exp(-t/tau1) + exp(-t/tau2))
	where tau1 < tau2

If tau2-tau1 -> 0 then we have a alphasynapse.
and if tau1 -> 0 then we have just single exponential decay.

The factor is evaluated in the
initial block such that an event of weight 1 generates a
peak conductance of 1.

Because the solution is a sum of exponentials, the
coupled equations can be solved as a pair of independent equations
by the more efficient cnexp method.

20121120 TMM & MJH modified to be current based synapse

20120413 TMM modified to include conductance saturation: the
conductance, g, will not exceed "saturation"; however when simulated
past saturation, g will take longer to drop back below saturation
(the A, B parameters climb arbitrarily high).

ENDCOMMENT

NEURON {
	POINT_PROCESS Exp2SynCur
	RANGE tau1, tau2, e, i, saturation, Vrest
: Vrest will replace v (Vm) to make this a current based rather than
: conductance based synapse
	NONSPECIFIC_CURRENT i

	RANGE g
}



