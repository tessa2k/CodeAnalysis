=== Following is the header of samples/156260/striatalnetwork/net_conn.g ===
//genesis
//net_conn.g - Description of the FS and SP connections to the SP network

//This file sets up the SP-SP connections based on the factor sent to the netconn function

////////////////////////////////Connecting Inhibitory SP network/////////////////////////////////////////////////
//1- soma, 2- primary dendrite, 3-secondary dendrite, 4- tertiary dendrite
function rannum_new (tablename)
	str tablename
  	int i
  	int last={getfield {tablename} X_A->xmax}  //get the index of last element from the value of xmax
  	//echo "last=" {last}
  	int index={ round {rand -0.499 {last+0.499}} }  //choose a random index
  	int filenum={getfield {tablename} X_A->table[{index}]}  //return filenum associated with index selected above
  	setfield {tablename} X_A->table[{filenum}] {getfield {tablename} X_A->table[{last}]} //replace selected filenum with last element
  	setfield {tablename} X_A->xmax {last-1} //set xmax to be {last-1}
  	return {filenum}
end

function rannum_net (tablename,net,min_SP,max_FS,int_perc)
  	str tablename,net
  	int i,min_SP,max_FS
  	float int_perc
  	int last={getfield {tablename} X_A->xmax}  //get the index of last element from the value of xmax
  	//echo "last=" {last}
  	if ({net}=="FS")
  		int index={ round {rand -0.499 {max_FS+0.499}} }  //choose a random index
  	elif ({net}=="SP")
  		int index={ round {rand {min_SP-0.499} {last+0.499}} }  //choose a random index
  	elif ({int_perc}!=1)
  		int index={ round {rand -0.499 {last+0.499}} }  //choose a random index
  	end
  	int filenum={getfield {tablename} X_A->table[{index}]}  //return filenum associated with index selected above
  	setfield {tablename} X_A->table[{filenum}] {getfield {tablename} X_A->table[{last}]} //replace selected filenum with last element
  	setfield {tablename} X_A->xmax {last-1} //set xmax to be {last-1}
  	return {filenum}
end

function connectGap(compA, compB, resistance)
	str compA


=== Following is the header of samples/156260/striatalnetwork/net_func.g ===
//genesis
//net_func.g 

/*
This file sets the netowork of SP cells up by calling the function that
sets up the SP-SP inhibitory network and calling the functions that connect
extrinsic input to the SP network.This file also has the include statements
for the file that prints out the connection of the SP-SP network. 
*/

/*
function include_net (net)
str net
addglobal str cellPath
setglobal cellPath "/library/"{net}"cell"
if ({net} == "SP")
  include MScell/MScellSyn.g // Single SP neuron model with synaptic channels
  makeMScellSyn {getglobal cellPath} "MScell/MScell.p"
else 
end
if ({net} == "FS") 
  include FScell/FScellSyn.g // Single FS neuron model with synaptic channels
  makeFScellSyn {getglobal cellPath} "FScell/FScell.p"
else
end

make_spike {cellPath}/soma
add_field {cellPath}
setfield /library/{net}cell/soma/spike thresh 0  abs_refract 0.004  output_amp 1
end
*/

/****************************Begin Network description****************************************************/
function rannum_new2 (tablename)
  str tablename
  int i
  int last={getfield {tablename} X_A->xmax}  //get the index of last element from the value of xmax
  //echo "last=" {last}
  int index={ round {rand -0.499 {last+0.499}} }  //choose a random index
  int filenum={getfield {tablename} X_A->table[{index}]}  //return filenum associated with index selected above


=== Following is the header of samples/156260/striatalnetwork/SimNet.g ===
// genesis
//SimNet.g  //Top level file used to run simulation

//include SimGlobals
//str net = {set_net "SP"}
include net
//include SP_output
include MScell/addoutput
include graphics

ce /
/*
create spikehistory Ctx.history
setfield Ctx.history ident_toggle 0 filename "Ctx.spikes" initialize 1 leave_open 1 flush 1
//addmsg /input/ Ctx.history SPIKESAVE 
*/

create spikehistory SPcell_D1.history
setfield SPcell_D1.history ident_toggle 0 filename "SPcell_D1.spikes" initialize 1 leave_open 1 flush 1

create spikehistory SPcell_D2.history
setfield SPcell_D2.history ident_toggle 0 filename "SPcell_D2.spikes" initialize 1 leave_open 1 flush 1
int g
for(g = 0; g < {getglobal numCells_SP}; g = {g + 1})
       if ({getfield /SPnetwork/SPcell[{g}]/soma D1} == 1)
       addmsg /SPnetwork/SPcell[{g}]/soma/spike SPcell_D1.history SPIKESAVE
       elif ({getfield /SPnetwork/SPcell[{g}]/soma D1} == 0) 
       addmsg /SPnetwork/SPcell[{g}]/soma/spike SPcell_D2.history SPIKESAVE
       end
end



create spikehistory FScell.history
setfield FScell.history ident_toggle 0 filename "FScell.spikes" initialize 1 leave_open 1 flush 1
addmsg /FSnetwork/FScell[]/soma/spike FScell.history SPIKESAVE


// make the control panel
//make_control


=== Following is the header of samples/156260/striatalnetwork/dist_print.g ===
//genesis
//net_conn.g - Description of the FS and SP connections to the SP network

//This file sets up the SP-SP connections based on the factor sent to the netconn function



  for(ctrpre = 0; ctrpre < {getglobal numCells_{net}}; ctrpre = {ctrpre + 1})  //loops through presynaptic cells
        xpre={getfield {network}[{ctrpre}]/soma/ x}  //get x location
	ypre={getfield {network}[{ctrpre}]/soma/ y}  //get y location

	for(ctrpost = 0; ctrpost < {getglobal numCells_{net2}}; ctrpost= {ctrpost +1})  //loops through postsynaptic cells

		if ({ctrpre}!={ctrpost}) //only if pre and post synaptic cells are different start connecting                                                                                                 
                   xpost={getfield {network2}[{ctrpost}]/soma/ x} //get x location
		   ypost={getfield {network2}[{ctrpost}]/soma/ y} //get y location

                   dist2parent={{pow {xpost-xpre} 2 } + {pow {ypost-ypre} 2}}   // calculating distance between the cells               
             


=== Following is the header of samples/156260/striatalnetwork/net.g ===
//genesis
//net.g 

/*
This file sets the netowork of SP cells up by calling the function that
sets up the SP-SP inhibitory network and calling the functions that connect
extrinsic input to the SP network.This file also has the include statements
for the file that prints out the connection of the SP-SP network. 
*/

include protospike
include nsynapses
include Net_parameters
include InputFromFile // External input
include net_conn
include net_func
include Utilities/connect_utility_pre
include Utilities/connect_utility_post

addglobal str cellPath_D1
setglobal cellPath_D1 "/library/SPcell_D1"
addglobal str cellPath_D2
setglobal cellPath_D2 "/library/SPcell_D2"
include MScell/MScellSyn_D1.g // Single SP neuron model with synaptic channels
makeMScellSyn "/library/SPcell_D1"  "MScell/MScell08CM3_D1.p"
make_spike {cellPath_D1}/soma
add_field {cellPath_D1}
setfield {cellPath_D1}/soma/spike thresh 0  abs_refract 0.004  output_amp 1
include MScell/MScellSyn_D2.g // Single SP neuron model with synaptic channels
makeMScellSyn  "/library/SPcell_D2" "MScell/MScell08CM3_D2.p"
make_spike {cellPath_D2}/soma
add_field {cellPath_D2}
setfield {cellPath_D2}/soma/spike thresh 0  abs_refract 0.004  output_amp 1
//D1-0 D2-1
make_net "SP" 0.5 //reads in function from net_func.g

addglobal str cellPath_FS
setglobal cellPath_FS "/library/FScell"
include FScell/FScellSyn.g // Single FS neuron model with synaptic channels
makeFScellSyn {getglobal cellPath_FS} "FScell/FScell.p"


=== Following is the header of samples/156260/striatalnetwork/Net_parameters.g ===
//genesis
//Net_parameters.g

//SP Network Parameters

str indataInfoFile = "INPUTDATA_SP/inputInfo.txt"
openfile {indataInfoFile} r
str indataType     = {readfile {indataInfoFile}}
float corr_syn_Glu  = {readfile {indataInfoFile}}
float corr_syn_GABA  = {readfile {indataInfoFile}}
float upFreq       = {readfile {indataInfoFile}}
float noiseFreq    = {readfile {indataInfoFile}}
float maxInputTime = {readfile {indataInfoFile}}
int randSeed       = {readfile {indataInfoFile}}
//int numCells  = {readfile {indataInfoFile}}
closefile {indataInfoFile}
int numCells_SP = 1000
int weight_C_SP =1, weight_C_FS=3

//CLOCKS

float simDt=1e-5 //1e-6 needed for voltage clamp
float VmOutDt=1e-4 
float CaOutDt= 5e-4
float spikeoutdt=1e-3  

float maxTime = 2.0		// simulation time
float tmax = 2.0

str outputName = "SPnetout"

setclock 0 2e-5        // Simulation time step (Second)       
//setclock 1 5e-4        // time step for graphic output 
setclock 1 1e-4


// Use the SPRNG random number generator
setrand -sprng
randseed {{randSeed} + 4711}



=== Following is the header of samples/156260/striatalnetwork/Matlab_files/makeDaughterInsignal.m ===
%
% Generates 2Hz square waves with 0.5 dutycycle.
%

function insignal = makeDaughterInsignal(corr_syn, nSyn, ...
                                      upFreq, downFreq, maxTime)

  nShare = nSyn - sqrt(corr_syn)*(nSyn-1);
  pShare = 1/nShare;
  
  baseFreq = 2.5;
  dutyCycle = 0.5;
  
  stateTime = dutyCycle/baseFreq;
  isUpstate = 1; % Start with upstate
  startTime = 0;
  
  motherSpikes = [];
  
  for startTime = 0:stateTime:(maxTime-stateTime)
      if(isUpstate)
          curFreq = upFreq*nShare;          
      else
          curFreq = downFreq*nShare;          
      end
      
      motherSpikes = [motherSpikes; ...
                      startTime + poissonMaxTime(curFreq, stateTime)];
      
      isUpstate = isUpstate;
  end
  
  len = length(motherSpikes);

  v = (rand(len, nSyn) < pShare).*repmat(motherSpikes,1,nSyn);
  v(find(v == 0)) = inf;
  v = sort(v);
  vlen = 1+max(mod(find(v < inf) - 1, len));
  insignal = v(1:vlen,:);
  


=== Following is the header of samples/156260/striatalnetwork/Matlab_files/poissonMaxTime.m ===
% http://en.wikipedia.org/wiki/Exponential_distribution
%
% -ln(u)/lambda
%

function p = poissonMaxTime(lambda, maxTime)

p = cumsum(-log(rand(ceil(lambda*maxTime),1))/lambda);
t = p(end) - log(rand(1))/lambda;

while(t < maxTime)
    p = [p; t];
    t = t - log(rand(1))/lambda;
end

p = p(find(p < maxTime),1);


=== Following is the header of samples/156260/striatalnetwork/Matlab_files/makeDaughterInsignal_no_upstate.m ===
%
% Generates 2Hz square waves with 0.5 dutycycle.
%

function insignal = makeDaughterInsignal(corr_syn, nSyn, ...
                                      upFreq, downFreq, maxTime)

  nShare = nSyn - sqrt(corr_syn)*(nSyn-1);
  pShare = 1/nShare;
  
  baseFreq = 2.5;
  dutyCycle = 0.5;
  
  stateTime = dutyCycle/baseFreq;
  isUpstate = 1; % Start with upstate
  startTime = 0;
  
  motherSpikes = [];
  
  for startTime = 0:stateTime:(maxTime-stateTime)
      if(isUpstate)
          curFreq = upFreq*nShare;          
      else
          curFreq = downFreq*nShare;          
      end
      
      motherSpikes = [motherSpikes; ...
                      startTime + poissonMaxTime(curFreq, stateTime)];
      
      isUpstate = ~isUpstate;
  end
  
  len = length(motherSpikes);

  v = (rand(len, nSyn) < pShare).*repmat(motherSpikes,1,nSyn);
  v(find(v == 0)) = inf;
  v = sort(v);
  vlen = 1+max(mod(find(v < inf) - 1, len));
  insignal = v(1:vlen,:);
  


=== Following is the header of samples/156260/striatalnetwork/Matlab_files/Inputwithcorrelation.m ===
%Notes for Dr. Blackwell from Sriram:
%1. What this file does:
% This file makes the input trains that would serve as the cortical and fs input
% for the SPcells. The duplicate and unique input signals are now combined in
% the genesis file SimFile.g. This file also has a variable which contains 
% unique random numbers, the function of which is described in the SimFile.g
% file. The noise and inout signals will be combined in this file for the 
% next round once the details of the input connection is finalized. 

function m = Inputwithcorrelation(numCells, corr_syn_Glu, nAMPA, nAMPA_u, ...
								  corr_syn_GABA, nGABA, nGABA_u, perc_single_repeats, upFreq, maxTime,allowVar, randSeed)
                                 
	rand('seed', randSeed);
	randSeed = rand('seed');
	downFreq = 1e-9;

	disp(['Setting random seed to ' num2str(randSeed)])
	disp(['All upstate input, freq ' num2str(upFreq)])

	path = [pwd '/INPUTDATA/'];
	fprintf('%s\n',path);

	nAMPA_d = nAMPA - nAMPA_u;
	nGABA_d = nGABA - nGABA_u;


	if(allowVar)
		disp('Generating  input with varying number of duplicates within a neuron')
  
		  dupAMPAInsignal = makeDaughterInput(corr_syn_Glu, nAMPA_d, ...
                                      upFreq, maxTime);

		dupGABAInsignal = makeDaughterInput(corr_syn_GABA, nGABA_d, ...
                                      upFreq, maxTime);
 
		for nCtr = 1:numCells

			% Generate input to neurons that are correlated within the neuron
			% but not correlated between neurons. This input is then mixed
			% with the population shared input.


=== Following is the header of samples/156260/striatalnetwork/Matlab_files/makeDaughterInput.m ===
%
% Generates input for each cell with Nampa(nSyn)columns and rows proportional to freq*maxTime
% nSyn in the number of synapses
% corr_syn is the correlation between the synapses

function noise = makeDaughterInput(corr_syn, nSyn, freq, maxTime)

	nShare = nSyn - sqrt(corr_syn)*(nSyn-1);
	pShare = 1/nShare;
  
	motherSpikes = poissonMaxTime(freq*nShare, maxTime);
  
	len = length(motherSpikes); % # rows of final array

	v = (rand(len, nSyn) < pShare).*repmat(motherSpikes,1,nSyn); %0 indicates don't assign spikes and 1 assigns
	v(find(v == 0)) = inf;
	v = sort(v,1); % sorts each column in ascending order (2nd argument is ascending or descending)
	vlen = 1+max(mod(find(v < inf) - 1, len));
	v(find(v == inf)) = 0;
	noise = v(1:vlen,:);
  


=== Following is the header of samples/156260/striatalnetwork/Matlab_files/makeTrainInsignal.m ===
%
% Generates 2Hz square waves with 0.5 dutycycle.
%

function insignal = makeTrainInsignal(corr_syn, nSyn, ...
                                      upFreq, downFreq, maxTime)

  nShare = nSyn - sqrt(corr_syn)*(nSyn-1);

  baseFreq = 2.5;
  dutyCycle = 0.5;
  
  stateTime = dutyCycle/baseFreq;
  
  
  for i=1:nShare

    isUpstate = 1; % Start with upstate
    startTime = 0;

    trainSpikes{i} = [];
    
    for startTime = 0:stateTime:(maxTime-stateTime)

      if(isUpstate)
          curFreq = upFreq;          
      else
          curFreq = downFreq;          
      end
      
      trainSpikes{i} = [trainSpikes{i}; ...
                        startTime + poissonMaxTime(curFreq, stateTime)];
      
      isUpstate = ~isUpstate;
      
    end          
         
  end
  
  allSpikes = [];


=== Following is the header of samples/156260/striatalnetwork/Matlab_files/writeInput.m ===
% writeInput('/home/nobackup/genesis.DATA/INDATA/test-%d', myData)

function writeInput(file, inputData)

path = [pwd '/INPUTDATA/'];
[r,c] = size(inputData);
for i=1:c
    data = inputData(:,i);
    spikes = data(find(data < inf));
    filename = strcat(file,num2str(i),'.txt');
    fid = fopen([filename], 'w');
    fprintf(fid, '%f\n',spikes);
    fclose(fid);
end


=== Following is the header of samples/156260/striatalnetwork/Matlab_files/InputwithCorrelation2.m ===
%Notes for Dr. Blackwell from Sriram:
%Different from InpurwithCorrelation: downfreq:0.1 and using makeDaughterInsignal so has both down and up states
%1. What this file does:
% This file makes the input trains that would serve as the cortical and fs input
% for the SPcells. The duplicate and unique input signals are now combined in
% the genesis file SimFile.g. This file also has a variable which contains 
% unique random numbers, the function of which is described in the SimFile.g
% file. The noise and inout signals will be combined in this file for the 
% next round once the details of the input connection is finalized. 

function m = InputwithCorrelation2(numCells, corr_syn_Glu, nAMPA, nAMPA_u, ...
								  corr_syn_GABA, nGABA, nGABA_u, perc_single_repeats, upFreq, maxTime,allowVar, randSeed)
                                 
	rand('seed', randSeed);
	randSeed = rand('seed');
	downFreq = 0.1;

	disp(['Setting random seed to ' num2str(randSeed)])
	disp(['All upstate input, freq ' num2str(upFreq)])

	path = [pwd '/INPUTDATA/'];
	fprintf('%s\n',path);

	nAMPA_d = nAMPA - nAMPA_u;
	nGABA_d = nGABA - nGABA_u;


	if(allowVar)
		disp('Generating  input with varying number of duplicates within a neuron')
  
		  dupAMPAInsignal = makeDaughterInsignal(corr_syn_Glu, nAMPA_d, ...
							 upFreq,downFreq,  maxTime);

		dupGABAInsignal = makeDaughterInsignal(corr_syn_GABA, nGABA_d, ...
						       25,downFreq, maxTime);
 
		for nCtr = 1:numCells

			% Generate input to neurons that are correlated within the neuron
			% but not correlated between neurons. This input is then mixed


=== Following is the header of samples/156260/striatalnetwork/Matlab_files/makeTrainInput.m ===
%
% Generates 2Hz square waves with 0.5 dutycycle.
%

function noise = makeTrainInput(corr_syn, percSingleRepeats, nSyn, freq, maxTime)

	nShare = nSyn - sqrt(corr_syn)*(nSyn-1);
	allSpikes = poissonMaxTime(freq*nShare, maxTime);
  
	for i=1:nSyn
		finalSpikes{i} = [];
	end
  
	for i=1:length(allSpikes)
		repeats = nSyn*percSingleRepeats;
		repeats = floor(repeats) + (rand(1) < mod(repeats,1));
		freeTrains = 1:nSyn;
     
		for j=1:repeats
			idx = ceil(length(freeTrains)*rand(1));
			trainIdx = freeTrains(idx);
			freeTrains(idx) = [];
			finalSpikes{trainIdx} = [finalSpikes{trainIdx}; allSpikes(i)];
		end     
	end

	for i=1:nSyn
		trainLen(i) = length(finalSpikes{i}); 
	end

	maxLen = max(trainLen); 
	noise = 0*ones(maxLen,nSyn);

	for i=1:nSyn
		noise(1:length(finalSpikes{i}),i) = finalSpikes{i}; 
	end
  


=== Following is the header of samples/156260/striatalnetwork/README.html ===
<html><pre>
This is the README for the striatal network model model associated
with the paper:

Damodaran S, Evans RC, Blackwell KT (2014) Synchronized firing of
fast-spiking interneurons is critical to maintain balanced firing
between direct and indirect pathway neurons of the striatum. J
Neurophysiol 111:836-48

GENESIS is required which is freely available here:

<a href="http://genesis-sim.org/">http://genesis-sim.org/</a>

1. Top level file: SimNet.g
This file calls MScell.g and the appropriate graphics functions

2. SPnet.g
This file calls the functions that connect both the SP-SP network and
the extrinsic network of cortical and FS inputs

3. net_conn.g
This file contains the function that connects the SP-SP network

4. InputFromFile.g
This file has the functions that reads and connects the MATLAB
generated input trains (cortical and FS) to the SP network NOTE: The
files are generated in MATLAB with the ASSUMPTION that we are hooking
up every single input in the network. So at a minimum we must have
enough inputs for the synapses described in the nsynapses file.

TO RUN THE SIMULATION:
Run at -f Cntl.bat Now or SimNet in GENESIS.

The default condition is the control condition. In order to change
between the different conditions:
1. NoFS: Replace the net_func.g file with the net_func.g file in the
No_FS folder.
2. NoMSN-MSN: Replace the net_func.g file with the net_func.g file in
the No_FB folder.
3. No Gap junctions: Replace the FScell folder with the FScell folder


=== Following is the header of samples/156260/striatalnetwork/Utilities/gaba_count.g ===
//genesis
//gaba_count
int count, tot_cnt
str comp_name

foreach comp_name ({el /SPnetwork/SPcell[]/##[TYPE=compartment]}) 
        count = {getmsg {comp_name}/GABA -in -count}
        count = {count} -1
        tot_cnt = {tot_cnt} + {count}   
end

echo "GABA messages to SP connections" >> gaba_count.log
echo {tot_cnt} >> gaba_count.log


=== Following is the header of samples/156260/striatalnetwork/Utilities/pairs_utility.g ===
//genesis
//connect_utility_post

//Post-synaptic

function post (Netname)

foreach comp_name ({el {Netpath}/##[TYPE=compartment]}) 
  cnt = {getmsg {comp_name}/GABA -in -count} 
  if ({cnt}>1)
    ce {comp_name}
    echo "" >> connect_post.log   
    echo "Post-synaptic location" >> connect_post.log
    pwe >> connect_post.log  
    echo "Pre-synaptic SP connections" >> connect_post.log
    for (i = 1; i < {cnt}; i= {i +1})
        echo {getmsg {comp_name}/GABA -in -source {i}} >> connect_post.log  
    end       
  else
  end 
end

end


=== Following is the header of samples/156260/striatalnetwork/Utilities/connect_utility_post.g ===
//genesis
//connect_utility_post

//Post-synaptic

function post (Net1, Net2)
str Net1, Net2, comp_name
int cnt, i

foreach comp_name ({el {Net2}/##[TYPE=compartment]}) 
  cnt = {getmsg {comp_name}/GABA -in -count} 
  if ({cnt}>1)
    ce {comp_name}
    echo "" >> connect_post.log   
    echo "Post-synaptic location" >> connect_post.log
    pwe >> connect_post.log  
    echo "Pre-synaptic SP connections" >> connect_post.log
    for (i = 1; i < {cnt}; i= {i +1})
        echo {getmsg {comp_name}/GABA -in -source {i}} >> connect_post.log  
    end       
  else
  end 
end

end


=== Following is the header of samples/156260/striatalnetwork/Utilities/connect_utility_pre.g ===
//genesis
//connect_utility_pre

//Pre-synaptic

//str Netpath="/network/SPcell[]", comp_name

function pre (Net1, Net2)
echo "in pre"
str Net1, Net2, comp_name

int cnt, i, tot_cnt=0

foreach comp_name ({el {Net1}/soma}) 
  cnt = {getmsg {comp_name}/spike -out -count} 
  if ({cnt}>1)
    ce {comp_name}
    ce ..
    echo "" >> connect_pre.log   
    echo "Pre-synaptic location" >> connect_pre.log
    pwe >> connect_pre.log  
    echo "Post-synaptic SP connections" >> connect_pre.log
    for (i = 0; i < {cnt}; i= {i +1})
        echo {getmsg {comp_name}/spike -out -destination {i}} >> connect_pre.log  
    end       
  else
  end 
end

end


=== Following is the header of samples/156260/striatalnetwork/parameters.txt ===
2
/FSnetwork/FScell[0]/primdend1 /FSnetwork/FScell[1]/primdend1 1000000000000.000000
/FSnetwork/FScell[2]/primdend1 /FSnetwork/FScell[3]/primdend1 1000000000000.000000


=== Following is the header of samples/156260/striatalnetwork/nsynapses.g ===
//genesis
//nsynapses

int densityMax_soma_AMPA_SP = 0, densityMax_soma_GABA_SP = 3, densityMax_pd_AMPA_SP = 0, densityMax_pd_GABA_SP = 6
int densityMax_sd_AMPA_SP = 1, densityMax_sd_GABA_SP = 3 , densityMax_td_AMPA_SP = 2, densityMax_td_GABA_SP = 1
int densityMax_soma_AMPA_FS = 1, densityMax_soma_GABA_FS = 3, densityMax_pd_AMPA_FS = 1, densityMax_pd_GABA_FS = 3
int densityMax_sd_AMPA_FS = 0, densityMax_sd_GABA_FS = 3 , densityMax_td_AMPA_FS = 1, densityMax_td_GABA_FS = 0
//3 6 3 1
int prim_dend_num_SP = 4, sec_dend_num_SP = 8, tert_dend_num_SP = 16*11
int nAMPA_SP = {densityMax_soma_AMPA_SP} + {densityMax_pd_AMPA_SP}*{prim_dend_num_SP} + {densityMax_sd_AMPA_SP}*{sec_dend_num_SP} + {densityMax_td_AMPA_SP}*{tert_dend_num_SP}
int nGABA_SP = {densityMax_soma_GABA_SP} + {densityMax_pd_GABA_SP}*{prim_dend_num_SP} + {densityMax_sd_GABA_SP}*{sec_dend_num_SP} + {densityMax_td_GABA_SP}*{tert_dend_num_SP}

int prim_dend_num_FS = 3*2, sec_dend_num_FS = 6*4, tert_dend_num_FS = 12*8
int nAMPA_FS = {densityMax_soma_AMPA_FS} + {densityMax_pd_AMPA_FS}*{prim_dend_num_FS} + {densityMax_sd_AMPA_FS}*{sec_dend_num_FS} + {densityMax_td_AMPA_FS}*{tert_dend_num_FS}
int nGABA_FS = {densityMax_soma_GABA_FS} + {densityMax_pd_GABA_FS}*{prim_dend_num_FS} + {densityMax_sd_GABA_FS}*{sec_dend_num_FS} + {densityMax_td_GABA_FS}*{tert_dend_num_FS}


function add_field (cellpath)
str cellpath, CName
//echo "entering add_field cellpath" {cellpath}
if ({cellpath} == "/library/SPcell_D1" || {cellpath} == "/library/SPcell_D2")
  foreach CName ({el {cellpath}/##[TYPE=compartment]}) 
 //   echo " entered foreach"
    addfield {CName} nsynallowed_a
    addfield {CName} nsynallowed_g
    if ({getfield {CName} position}==1.599999996e-05)
 //     echo "soma"
      setfield {CName} nsynallowed_a {densityMax_soma_AMPA_SP}
      setfield {CName} nsynallowed_g {densityMax_soma_GABA_SP}
    elif ({getfield {CName} position}==3.599999764e-05) 
 //     echo "prim"
      setfield {CName} nsynallowed_a {densityMax_pd_AMPA_SP}
      setfield {CName} nsynallowed_g {densityMax_pd_GABA_SP}
    elif ({getfield {CName} position}==6.022999878e-05)
  //    echo "sec"
      setfield {CName} nsynallowed_a {densityMax_sd_AMPA_SP}
      setfield {CName} nsynallowed_g {densityMax_sd_GABA_SP}
    elif ({getfield {CName} position}>7.0e-05)
  //    echo "tert"
      setfield {CName} nsynallowed_a {densityMax_td_AMPA_SP}


=== Following is the header of samples/156260/striatalnetwork/FScell/errorHandler.g ===
function error(message)
    str message

    echo {message}

    quit
end


=== Following is the header of samples/156260/striatalnetwork/FScell/SynParams.g ===
//genesis
//SynParams.g

	str AMPAname = "AMPA"
	float EkAMPA = 0.0
        float AMPAtau1 = 0.67e-3
        float AMPAtau2 = 2e-3 
        float AMPAgmax = 364e-12 //Gittis et al

        str GABAname = "GABA"
        float GABAtau1 = 1.33e-3    // From Galarreta and Hestrin 1997 
        float GABAtau2 = 4e-3    //(used in Wolfs model)
        float EkGABA = -0.060
        float GABAgmax = 50e-12  //750e-12Modified Koos 2004 (Wolf uses 435e-12)



=== Following is the header of samples/156260/striatalnetwork/FScell/cellMorphology.g ===
// This file contains some of the constants defined for the cell
// used by correlatedCellNoise.g and inputManager.g
//
// correlatedCellNoise.g <-- responsible for the input noise to the cell
// inputManager.g        <-- responsible for the input signal to the cell

// Number of dendrites of each type, and number of compartments in each
int primNum     = 3, secNum     = 6, tertNum     = 12
int primCompNum = 2, secCompNum = 4, tertCompNum = 8

// Relative density of AMPA and GABA 
int somaGluBase  = 1, primGluBase  = 1, secGluBase   = 1, tertGluBase  = 1
int somaGABABase = 3, primGABABase = 3, secGABABase  = 3, tertGABABase = 0

// no GABA on distal dendrites, but increased
// GABA density on proximal dendrites


=== Following is the header of samples/156260/striatalnetwork/FScell/proto.g ===
//genesis

/**************************** 	      	proto.g 				**********************
Johannes Hjorth, Sriraman Damodaran     **************************************************************
	proto.g contains one primary routine:  
		make_prototypes
 	and one local routine 
		make_cylind_compartment
	these are used by the primary and are not intended for external calls
	The primary function, make_prototypes is called exactly once by FScell.g

******************************************************************************/
include FScell/errorHandler
include FScell/include_channels		// required for calls in make_protypes

//************************ Begin Local Subroutines ****************************

//********************* Begin function make_cylind_compartment *************
function make_cylind_compartment
	if (!{exists compartment})
		echo "COMPARTMENT DID NOT EXIST PRIOR TO CALL TO:"
		echo 			"make_cylind_compartment"
		create	compartment compartment
                addfield compartment position   // add a new field "postion" to store distance to soma
	end

   setfield compartment 		\ 
     	Em         {ELEAK} 	\
      	initVm     {EREST_ACT} 	\
        inject		0.0 	\
      	position    0.0
end
//************************ End function make_cylind_compartment ************

//**************************************************************************

//************************ End Local Subroutines ******************************
//*****************************************************************************

//************** Begin function make_prototypes (primary routine) *************


=== Following is the header of samples/156260/striatalnetwork/FScell/include_channels.g ===
/* include_channels.g -- description of the various active channels within the
 *               striatal GABAergic interneuron membrane, including
 *               a shunt
 *         
 * Copyright (C) 1999 Rory Kirchner (rory@mail.csh.rit.edu)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

include FScell/channels/a_channel
include FScell/channels/na_channel
include FScell/channels/k3132_channel
include FScell/channels/k13_channel
include FScell/channels/ampa_channel
include FScell/channels/gaba_channel


=== Following is the header of samples/156260/striatalnetwork/FScell/FScell.g ===
//////////////////////////////////////////////////////////////////////////
//
// Johannes Hjorth, june 2005
// hjorth@nada.kth.se
// Sriraman Damodaran, september 2010
// FScell.g - Creates a fast spiking neuron in the library
//
//////////////////////////////////////////////////////////////////////////
//
// make_FS_cell -- Creates the library template for a FS-neuron 
//
//////////////////////////////////////////////////////////////////////////
include FScell/proto.g

//************************ Begin function set_position *********************
//**************************************************************************
function set_position (cellpath)
//********************* Begin Local Variables ************************
str compt, cellpath
float dist2soma,x,y,z
//********************* End Local Variables *****************************
 		
if (!{exists {cellpath}})
  echo The current input {cellpath} does not exist (set_position) 
  return
end
 
  foreach compt ({el {cellpath}/##[TYPE=compartment]})
     	 x={getfield {compt} x}
     	 y={getfield {compt} y}
     	 z={getfield {compt} z}
     	dist2soma={sqrt {({pow {x} 2 }) + ({pow {y} 2}) + ({pow {z} 2})} }  
     	setfield {compt} position {dist2soma}
   end
end
	//************************ End function set_position ***********************
	//**************************************************************************


function make_FS_cell (cellpath,pfile)


=== Following is the header of samples/156260/striatalnetwork/FScell/AddSynapticChannels.g ===
//genesis

/***************************		MS Model, Version 5.12	**********************
**************************** 	     SynapticChannels.g 	**********************
Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************/

function addSynChannel (compPath, chanpath, gbar)

  str compPath, chanpath
  float gbar

  copy /library/{chanpath} {compPath}/{chanpath}

  addmsg {compPath} {compPath}/{chanpath} VOLTAGE Vm
  addmsg {compPath}/{chanpath} {compPath} CHANNEL Gk Ek

  // Set the new conductance
  float len = {getfield {compPath} len}
  float dia = {getfield {compPath} dia}
  float pi = 3.141592653589793
  float surf = {len*dia*pi}

/*	echo "XXXXXXXXXXXXXXX addSynChannel XXXXXXXXXXXXXXXX"
	echo "compPath = "{compPath}
	echo "chanpath = "{chanpath}
	echo "gbar = "{gbar}
	echo "XXXXXXXXXXXXXXX addSynchannel XXXXXXXXXXXXXXXX"
*/

//  setfield {compPath}/{chanName} gmax {surf*gbar}
  setfield {compPath}/{chanpath} gmax {gbar}
end
 
 


=== Following is the header of samples/156260/striatalnetwork/FScell/FScellSyn.g ===
//genesis
//FScellSyn.g
//This routine takes the FScell without synapses, and adds synapses

include FScell/FScell.g                 //FScell without synapses
include FScell/SynParams.g               //parameters on synaptic channels
include FScell/channels/synaptic_channel.g // function to make non nmda synaptic channels in library
include FScell/AddSynapticChannels.g	// contains functions to add channels to compartments

function makeFScellSyn (cellname,pfile)
   str cellname,pfile

   str CompName

   make_FS_cell {cellname} {pfile}

	//************* create synaptic channels in library *********
	pushe /library

  	make_synaptic_channel  {AMPAname} {AMPAtau1} {AMPAtau2} {AMPAgmax} {EkAMPA}
  	make_synaptic_channel  {GABAname} {GABAtau1} {GABAtau2} {GABAgmax} {EkGABA}

        pope {cellname}
	
   //********************* end synaptic channels in library **************

      foreach CompName ({el {cellname}/##[TYPE=compartment]}) 
        addSynChannel  {CompName} {AMPAname} {AMPAgmax}
        addSynChannel  {CompName} {GABAname} {GABAgmax}
      end


end


=== Following is the header of samples/156260/striatalnetwork/FScell/FScell.p ===
//FScell.p cell parameter file 
// co-ordinate mode
*relative
*cartesian
*asymmetric
*lambda_warn

// specifying constants, SI units
// Plenz D, Aertsen A. Neuroscience. 1996 Feb;70(4):861-91
// J Neurosci 1994,14:4613-4638 says Cm=0.007-0.008, Rm 120-200kOhm*cm^2 ???
//*set_compt_param RM 0.95 //ohm*m^2 =10 kohm*cm^2
*set_compt_param RM 2 //ohm*m^2 //Avrama decreased from 3 to 2 fix timeconstants
//*set_compt_param CM 0.01 //farads/m^2
*set_compt_param CM 0.007 //farads/m^2
//*set_compt_param RA 2  //ohm*m = 100 ohm*cm
*set_compt_param RA 3  //ohm*m
*set_compt_param EREST_ACT -0.063 //?? relative to zero??

// ELEAK is -0.063 without dopamine and -0.061 with dopamine
*set_compt_param ELEAK -0.063  // resting, Volts, was -65mV before



*start_cell /library/tert_dend
// x, y, z or x=length if y and z=0
   tert_dend   none        30    0    0    0.5 
   tert_dend2  .           30    0    0    0.5 
   tert_dend3  .           30    0    0    0.5 
   tert_dend4  .           30    0    0    0.5
   tert_dend5  .           30    0    0    0.5 
   tert_dend6  .           30    0    0    0.5 
   tert_dend7  .           30    0    0    0.5 
   tert_dend8  .           30    0    0    0.5 

// make distal dend with 8 compartments a prototype
*makeproto /library/tert_dend

*start_cell /library/sec_dend
   sec_dend   none   37    0    0    0.75 A_channel 00
   sec_dend2  .      37    0    0    0.75 A_channel 00


=== Following is the header of samples/156260/striatalnetwork/FScell/channels/a_channel.g ===

/* describes the activation function for the A channel. 
 * taken from the MSN activation boltzman from:
 * (tkatch, j. neuroscience, 20(2):579-588)
 */

//float EREST_ACT = -0.056
function AChanAct(voltage)

    float voltage
    float vh = -0.045
    float vc = -0.013

  float act = {1 / {1 + {exp {{{voltage}  - {vh}} / {vc}}}}}

    return act
end

/* describes the time constant over a range of voltages
 * taken from Figure 2b of J. neuroscience 20(2):579-588,
 * tkatch january 2000
 */
function AChanTauAct(voltage) 
    float voltage
    float vh = -0.07
    float vc = 0.013
    return {1e-3 * {1 + {exp {-{{voltage} - {vh} } / {vc}}}}}
end

/* describes the inactivation function for the A channel.
 * taken from the MSN inactivation boltzman from:
 * (tkatch, j. neuroscience, 20(2):579-588)
 * vc was not given in this paper, so it was estimated to be
 * about 8mV (see (surmeier, brain research, 473:187-192
 * vh = -0.0756 vc = 0.008
 */
function AChanInact(voltage)

    float voltage
    float vh = -0.077


=== Following is the header of samples/156260/striatalnetwork/FScell/channels/gaba_channel.g ===
/* 
 * interneuron simulation
 * Copyright (C) 2000 Rory Kirchner (rory@mail.csh.rit.edu)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
 *
 */

function make_GABA_channel

   str chanpath = "GABA"
// cf Bartos et al 2001, Dunning et al 1999, Ling et al 1998
//adjust to Avramas data instead
//   float tau1 = 2e-3
//   float tau2 = 6e-3
   float tau1 = 1.33e-3
   float tau2 = 4e-3
//was 2 and 6e-3 before

   float gmax = 0.5e-10
   float Ek = -0.060

   create synchan {chanpath}

   setfield {chanpath} tau1 {tau1} tau2 {tau2} gmax {gmax} Ek {Ek}

end



=== Following is the header of samples/156260/striatalnetwork/FScell/channels/na_channel.g ===
/* Na channel
 *      fills tables with values for alpha and beta and then
 *      uses tweakalpha to alter the values to A and B
 *      values for alpha and beta are taken from:
 *      J. Neurophysiology 82: 2476-2389, 1999 
 *      on page 2478
 * 
 *      the functions below convert to physiological units to do the 
 *      calulations and convert back to SI units for the output
 */

/* alpha for the type X gate (activation) */

function NaChanAlphaX(voltage)

    float voltage = {voltage} * 1e3 /* convert to mV */

    float num = {3020 - {40 * {voltage}}}
    float denom = {{exp {{-75.5 + {voltage}} / {-13.5}}} - 1}

    /* convert sec to msec */
    float act = {{num} / {denom}} * 1e3
    
    return act
end

/* beta for the type X gate (activation) */
function NaChanBetaX(voltage) 

    float voltage = {voltage} * 1e3 /* convert to mV */

    //echo NaBetaXVoltage: {voltage}
    float num = 1.2262
    float denom = {exp {{voltage} / 42.248}}

    /* convert sec to msec */
    float act = {{num} / {denom}} * 1e3

    return act
end


=== Following is the header of samples/156260/striatalnetwork/FScell/channels/k13_channel.g ===
/* K3132 channel
 *      fills tables with values for alpha and beta and then
 *      uses tweakalpha to alter the values to A and B
 *      values for alpha and beta are taken from:
 *      J. Neurophysiology 82: 2476-2389, 1999 
 *      on page 2478
 * 
 *      the functions below convert to physiological units to do the 
 *      calulations and convert back to SI units for the output
 */

/* alpha for the type X gate (activation) */
function K13ChanAlphaX(voltage)

    float voltage = {{voltage} * 1e3  - 0} /* convert to mV, add offset */
    
    float num = {-{0.616 + {0.014 * {voltage}}}}
    float denom = {{exp {{44 + {voltage}} / {-2.3}}} - 1}

    /* convert sec to msec */
    float act = {{num} / {denom}} * 1e3
    
    return act
end

/* beta for the type X gate (activation) */
function K13ChanBetaX(voltage) 

    float voltage = {{voltage} * 1e3 - 0} /* convert to mV */

    float num = 0.0043
    float denom = {exp {{44 + {voltage}} / 34}}

    /* convert sec to msec */
    float act = {{num} / {denom}} * 1e3

    return act
end

function make_K13_channel 


=== Following is the header of samples/156260/striatalnetwork/FScell/channels/synaptic_channel.g ===
//genesis
//synaptic_channel.g

function make_synaptic_channel (chanpath, tau1, tau2, gmax, Ek)
   str chanpath
   float tau1
   float tau2
   float gmax 
   float Ek

	echo "XXXXXXXXXXXXXXX make_synaptic_channel XXXXXXXXXXXXXXXX"
	echo "chanpath = "{chanpath}
	echo "tau1 = "{tau1}
	echo "tau2 = "{tau2}
	echo "gmax = "{gmax}
	echo "XXXXXXXXXXXXXXX make_synaptic_channel XXXXXXXXXXXXXXXX"

   create synchan {chanpath}

   setfield {chanpath} tau1 {tau1} \
                       tau2 {tau2}\ 
                       gmax {gmax}\
                        Ek {Ek}

end




=== Following is the header of samples/156260/striatalnetwork/FScell/channels/ampa_channel.g ===
/* 
 * interneuron simulation
 * Copyright (C) 2000 Rory Kirchner (rory@mail.csh.rit.edu)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
 *
 */

function make_AMPA_channel

   str chanpath = "AMPA"
// see  Gotz T, et al, 1997
// here adjusted to Avramas data
   float tau1 = 0.67e-3 // was 1e-3 before

// from Gotz et al, and Angulo et al 1997
// here adjusted to Avramas data instead
   float tau2 = 2e-3  //was 1 and 3e-3 before 

   float gmax = 0
   float Ek = 0.0

   echo "chanpath = "{chanpath}
   
   create synchan {chanpath}

   setfield {chanpath} tau1 {tau1} tau2 {tau2} gmax {gmax} Ek {Ek}



=== Following is the header of samples/156260/striatalnetwork/FScell/channels/k3132_channel.g ===
/* K3132 channel
 *      fills tables with values for alpha and beta and then
 *      uses tweakalpha to alter the values to A and B
 *      values for alpha and beta are taken from:
 *      J. Neurophysiology 82: 2476-2389, 1999 
 *      on page 2478
 * 
 *      the functions below convert to physiological units to do the 
 *      calulations and convert back to SI units for the output
 */

/* alpha for the type X gate (activation) */
function K3132ChanAlphaX(voltage)

    float voltage = {voltage} * 1e3 /* convert to mV */
    
    float num = {95 - {voltage}}
    float denom = {{exp {{-95 + {voltage}} / {-11.8}}} - 1}

    /* convert sec to msec */
    float act = {{num} / {denom}} * 1e3
    
    return act
end

/* beta for the type X gate (activation) */
function K3132ChanBetaX(voltage) 

    float voltage = {voltage} * 1e3 /* convert to mV */

    float num = 0.025
    float denom = {exp {{voltage} / 22.222}}

    /* convert sec to msec */
    float act = {{num} / {denom}} * 1e3

    return act
end

function make_K3132_channel 


=== Following is the header of samples/156260/striatalnetwork/InputFromFile.g ===
//genesis
//InputFromFile.g
/*
1. What this file does:
This file has the functions for reading in the input from the file  
into tables in genesis and for connecting these inputs to the synapses
of the cells. The connectInsignalToCell function takes as input
EACH individual cell name (SPcell(1) as oppossed to SPcell) and for that
cell loops through the different synapses in the different compartments
2. What this file does NOT do:
This file does not randomize the connection of the inputs to the synapses.
That function is performed in SimFile.g

NOTE: The files are generated in MATLAB with the ASSUMPTION that we are hooking
up every single input in the network. So at a minimum we must have enough inputs 
for the synapses described in the nsynapses file.

Please note that readInputFromFile assumes that the files are numbered
from 1 and up, whereas the input naming convention starts from 0
*/
////////////////////////////////////////////////////////////////////////////////

//Connect the files for the unique inputs from the MATLAB files to the timetables.

function readInputFromFile(net, inputName, filePath, SynNum, Unique)

    str inputName
    str filePath
    int SynNum
    int Unique
    

  if ({net}=="FS")
     str inputBasePath = "/input"
  else
  end
  if ({net}=="SP")
     str inputBasePath = "/input2" 
  else
  end


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_FS/net_func.g ===
//genesis
//net_func.g 

/*
This file sets the netowork of SP cells up by calling the function that
sets up the SP-SP inhibitory network and calling the functions that connect
extrinsic input to the SP network.This file also has the include statements
for the file that prints out the connection of the SP-SP network. 
*/

/*
function include_net (net)
str net
addglobal str cellPath
setglobal cellPath "/library/"{net}"cell"
if ({net} == "SP")
  include MScell/MScellSyn.g // Single SP neuron model with synaptic channels
  makeMScellSyn {getglobal cellPath} "MScell/MScell.p"
else 
end
if ({net} == "FS") 
  include FScell/FScellSyn.g // Single FS neuron model with synaptic channels
  makeFScellSyn {getglobal cellPath} "FScell/FScell.p"
else
end

make_spike {cellPath}/soma
add_field {cellPath}
setfield /library/{net}cell/soma/spike thresh 0  abs_refract 0.004  output_amp 1
end
*/

/****************************Begin Network description****************************************************/
function rannum_new2 (tablename)
  str tablename
  int i
  int last={getfield {tablename} X_A->xmax}  //get the index of last element from the value of xmax
  //echo "last=" {last}
  int index={ round {rand -0.499 {last+0.499}} }  //choose a random index
  int filenum={getfield {tablename} X_A->table[{index}]}  //return filenum associated with index selected above


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/errorHandler.g ===
function error(message)
    str message

    echo {message}

    quit
end


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/SynParams.g ===
//genesis
//SynParams.g

	str AMPAname = "AMPA"
	float EkAMPA = 0.0
        float AMPAtau1 = 0.67e-3
        float AMPAtau2 = 2e-3 
        float AMPAgmax = 364e-12 //Gittis et al

        str GABAname = "GABA"
        float GABAtau1 = 1.33e-3    // From Galarreta and Hestrin 1997 
        float GABAtau2 = 4e-3    //(used in Wolfs model)
        float EkGABA = -0.060
        float GABAgmax = 50e-12  //750e-12Modified Koos 2004 (Wolf uses 435e-12)



=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/cellMorphology.g ===
// This file contains some of the constants defined for the cell
// used by correlatedCellNoise.g and inputManager.g
//
// correlatedCellNoise.g <-- responsible for the input noise to the cell
// inputManager.g        <-- responsible for the input signal to the cell

// Number of dendrites of each type, and number of compartments in each
int primNum     = 3, secNum     = 6, tertNum     = 12
int primCompNum = 2, secCompNum = 4, tertCompNum = 8

// Relative density of AMPA and GABA 
int somaGluBase  = 1, primGluBase  = 1, secGluBase   = 1, tertGluBase  = 1
int somaGABABase = 3, primGABABase = 3, secGABABase  = 3, tertGABABase = 0

// no GABA on distal dendrites, but increased
// GABA density on proximal dendrites


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/proto.g ===
//genesis

/**************************** 	      	proto.g 				**********************
Johannes Hjorth, Sriraman Damodaran     **************************************************************
	proto.g contains one primary routine:  
		make_prototypes
 	and one local routine 
		make_cylind_compartment
	these are used by the primary and are not intended for external calls
	The primary function, make_prototypes is called exactly once by FScell.g

******************************************************************************/
include FScell/errorHandler
include FScell/include_channels		// required for calls in make_protypes

//************************ Begin Local Subroutines ****************************

//********************* Begin function make_cylind_compartment *************
function make_cylind_compartment
	if (!{exists compartment})
		echo "COMPARTMENT DID NOT EXIST PRIOR TO CALL TO:"
		echo 			"make_cylind_compartment"
		create	compartment compartment
                addfield compartment position   // add a new field "postion" to store distance to soma
	end

   setfield compartment 		\ 
     	Em         {ELEAK} 	\
      	initVm     {EREST_ACT} 	\
        inject		0.0 	\
      	position    0.0
end
//************************ End function make_cylind_compartment ************

//**************************************************************************

//************************ End Local Subroutines ******************************
//*****************************************************************************

//************** Begin function make_prototypes (primary routine) *************


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/include_channels.g ===
/* include_channels.g -- description of the various active channels within the
 *               striatal GABAergic interneuron membrane, including
 *               a shunt
 *         
 * Copyright (C) 1999 Rory Kirchner (rory@mail.csh.rit.edu)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

include FScell/channels/a_channel
include FScell/channels/na_channel
include FScell/channels/k3132_channel
include FScell/channels/k13_channel
include FScell/channels/ampa_channel
include FScell/channels/gaba_channel


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/FScell.g ===
//////////////////////////////////////////////////////////////////////////
//
// Johannes Hjorth, june 2005
// hjorth@nada.kth.se
// Sriraman Damodaran, september 2010
// FScell.g - Creates a fast spiking neuron in the library
//
//////////////////////////////////////////////////////////////////////////
//
// make_FS_cell -- Creates the library template for a FS-neuron 
//
//////////////////////////////////////////////////////////////////////////
include FScell/proto.g

//************************ Begin function set_position *********************
//**************************************************************************
function set_position (cellpath)
//********************* Begin Local Variables ************************
str compt, cellpath
float dist2soma,x,y,z
//********************* End Local Variables *****************************
 		
if (!{exists {cellpath}})
  echo The current input {cellpath} does not exist (set_position) 
  return
end
 
  foreach compt ({el {cellpath}/##[TYPE=compartment]})
     	 x={getfield {compt} x}
     	 y={getfield {compt} y}
     	 z={getfield {compt} z}
     	dist2soma={sqrt {({pow {x} 2 }) + ({pow {y} 2}) + ({pow {z} 2})} }  
     	setfield {compt} position {dist2soma}
   end
end
	//************************ End function set_position ***********************
	//**************************************************************************


function make_FS_cell (cellpath,pfile)


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/AddSynapticChannels.g ===
//genesis

/***************************		MS Model, Version 5.12	**********************
**************************** 	     SynapticChannels.g 	**********************
Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************/

function addSynChannel (compPath, chanpath, gbar)

  str compPath, chanpath
  float gbar

  copy /library/{chanpath} {compPath}/{chanpath}

  addmsg {compPath} {compPath}/{chanpath} VOLTAGE Vm
  addmsg {compPath}/{chanpath} {compPath} CHANNEL Gk Ek

  // Set the new conductance
  float len = {getfield {compPath} len}
  float dia = {getfield {compPath} dia}
  float pi = 3.141592653589793
  float surf = {len*dia*pi}

/*	echo "XXXXXXXXXXXXXXX addSynChannel XXXXXXXXXXXXXXXX"
	echo "compPath = "{compPath}
	echo "chanpath = "{chanpath}
	echo "gbar = "{gbar}
	echo "XXXXXXXXXXXXXXX addSynchannel XXXXXXXXXXXXXXXX"
*/

//  setfield {compPath}/{chanName} gmax {surf*gbar}
  setfield {compPath}/{chanpath} gmax {gbar}
end
 
 


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/FScellSyn.g ===
//genesis
//FScellSyn.g
//This routine takes the FScell without synapses, and adds synapses

include FScell/FScell.g                 //FScell without synapses
include FScell/SynParams.g               //parameters on synaptic channels
include FScell/channels/synaptic_channel.g // function to make non nmda synaptic channels in library
include FScell/AddSynapticChannels.g	// contains functions to add channels to compartments

function makeFScellSyn (cellname,pfile)
   str cellname,pfile

   str CompName

   make_FS_cell {cellname} {pfile}

	//************* create synaptic channels in library *********
	pushe /library

  	make_synaptic_channel  {AMPAname} {AMPAtau1} {AMPAtau2} {AMPAgmax} {EkAMPA}
  	make_synaptic_channel  {GABAname} {GABAtau1} {GABAtau2} {GABAgmax} {EkGABA}

        pope {cellname}
	
   //********************* end synaptic channels in library **************

      foreach CompName ({el {cellname}/##[TYPE=compartment]}) 
        addSynChannel  {CompName} {AMPAname} {AMPAgmax}
        addSynChannel  {CompName} {GABAname} {GABAgmax}
      end


end


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/FScell.p ===
//FScell.p cell parameter file 
// co-ordinate mode
*relative
*cartesian
*asymmetric
*lambda_warn

// specifying constants, SI units
// Plenz D, Aertsen A. Neuroscience. 1996 Feb;70(4):861-91
// J Neurosci 1994,14:4613-4638 says Cm=0.007-0.008, Rm 120-200kOhm*cm^2 ???
//*set_compt_param RM 0.95 //ohm*m^2 =10 kohm*cm^2
*set_compt_param RM 2 //ohm*m^2 //Avrama decreased from 3 to 2 fix timeconstants
//*set_compt_param CM 0.01 //farads/m^2
*set_compt_param CM 0.007 //farads/m^2
//*set_compt_param RA 2  //ohm*m = 100 ohm*cm
*set_compt_param RA 3  //ohm*m
*set_compt_param EREST_ACT -0.063 //?? relative to zero??

// ELEAK is -0.063 without dopamine and -0.061 with dopamine
*set_compt_param ELEAK -0.063  // resting, Volts, was -65mV before



*start_cell /library/tert_dend
// x, y, z or x=length if y and z=0
   tert_dend   none        30    0    0    0.5 
   tert_dend2  .           30    0    0    0.5 
   tert_dend3  .           30    0    0    0.5 
   tert_dend4  .           30    0    0    0.5
   tert_dend5  .           30    0    0    0.5 
   tert_dend6  .           30    0    0    0.5 
   tert_dend7  .           30    0    0    0.5 
   tert_dend8  .           30    0    0    0.5 

// make distal dend with 8 compartments a prototype
*makeproto /library/tert_dend

*start_cell /library/sec_dend
   sec_dend   none   37    0    0    0.75 A_channel 00
   sec_dend2  .      37    0    0    0.75 A_channel 00


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/channels/a_channel.g ===

/* describes the activation function for the A channel. 
 * taken from the MSN activation boltzman from:
 * (tkatch, j. neuroscience, 20(2):579-588)
 */

//float EREST_ACT = -0.056
function AChanAct(voltage)

    float voltage
    float vh = -0.045
    float vc = -0.013

  float act = {1 / {1 + {exp {{{voltage}  - {vh}} / {vc}}}}}

    return act
end

/* describes the time constant over a range of voltages
 * taken from Figure 2b of J. neuroscience 20(2):579-588,
 * tkatch january 2000
 */
function AChanTauAct(voltage) 
    float voltage
    float vh = -0.07
    float vc = 0.013
    return {1e-3 * {1 + {exp {-{{voltage} - {vh} } / {vc}}}}}
end

/* describes the inactivation function for the A channel.
 * taken from the MSN inactivation boltzman from:
 * (tkatch, j. neuroscience, 20(2):579-588)
 * vc was not given in this paper, so it was estimated to be
 * about 8mV (see (surmeier, brain research, 473:187-192
 * vh = -0.0756 vc = 0.008
 */
function AChanInact(voltage)

    float voltage
    float vh = -0.077


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/channels/gaba_channel.g ===
/* 
 * interneuron simulation
 * Copyright (C) 2000 Rory Kirchner (rory@mail.csh.rit.edu)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
 *
 */

function make_GABA_channel

   str chanpath = "GABA"
// cf Bartos et al 2001, Dunning et al 1999, Ling et al 1998
//adjust to Avramas data instead
//   float tau1 = 2e-3
//   float tau2 = 6e-3
   float tau1 = 1.33e-3
   float tau2 = 5.7e-3
//was 2 and 6e-3 before

   float gmax = 0.5e-10
   float Ek = -0.060

   create synchan {chanpath}

   setfield {chanpath} tau1 {tau1} tau2 {tau2} gmax {gmax} Ek {Ek}

end



=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/channels/na_channel.g ===
/* Na channel
 *      fills tables with values for alpha and beta and then
 *      uses tweakalpha to alter the values to A and B
 *      values for alpha and beta are taken from:
 *      J. Neurophysiology 82: 2476-2389, 1999 
 *      on page 2478
 * 
 *      the functions below convert to physiological units to do the 
 *      calulations and convert back to SI units for the output
 */

/* alpha for the type X gate (activation) */

function NaChanAlphaX(voltage)

    float voltage = {voltage} * 1e3 /* convert to mV */

    float num = {3020 - {40 * {voltage}}}
    float denom = {{exp {{-75.5 + {voltage}} / {-13.5}}} - 1}

    /* convert sec to msec */
    float act = {{num} / {denom}} * 1e3
    
    return act
end

/* beta for the type X gate (activation) */
function NaChanBetaX(voltage) 

    float voltage = {voltage} * 1e3 /* convert to mV */

    //echo NaBetaXVoltage: {voltage}
    float num = 1.2262
    float denom = {exp {{voltage} / 42.248}}

    /* convert sec to msec */
    float act = {{num} / {denom}} * 1e3

    return act
end


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/channels/k13_channel.g ===
/* K3132 channel
 *      fills tables with values for alpha and beta and then
 *      uses tweakalpha to alter the values to A and B
 *      values for alpha and beta are taken from:
 *      J. Neurophysiology 82: 2476-2389, 1999 
 *      on page 2478
 * 
 *      the functions below convert to physiological units to do the 
 *      calulations and convert back to SI units for the output
 */

/* alpha for the type X gate (activation) */
function K13ChanAlphaX(voltage)

    float voltage = {{voltage} * 1e3  - 0} /* convert to mV, add offset */
    
    float num = {-{0.616 + {0.014 * {voltage}}}}
    float denom = {{exp {{44 + {voltage}} / {-2.3}}} - 1}

    /* convert sec to msec */
    float act = {{num} / {denom}} * 1e3
    
    return act
end

/* beta for the type X gate (activation) */
function K13ChanBetaX(voltage) 

    float voltage = {{voltage} * 1e3 - 0} /* convert to mV */

    float num = 0.0043
    float denom = {exp {{44 + {voltage}} / 34}}

    /* convert sec to msec */
    float act = {{num} / {denom}} * 1e3

    return act
end

function make_K13_channel 


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/channels/synaptic_channel.g ===
//genesis
//synaptic_channel.g

function make_synaptic_channel (chanpath, tau1, tau2, gmax, Ek)
   str chanpath
   float tau1
   float tau2
   float gmax 
   float Ek

	echo "XXXXXXXXXXXXXXX make_synaptic_channel XXXXXXXXXXXXXXXX"
	echo "chanpath = "{chanpath}
	echo "tau1 = "{tau1}
	echo "tau2 = "{tau2}
	echo "gmax = "{gmax}
	echo "XXXXXXXXXXXXXXX make_synaptic_channel XXXXXXXXXXXXXXXX"

   create synchan {chanpath}

   setfield {chanpath} tau1 {tau1} \
                       tau2 {tau2}\ 
                       gmax {gmax}\
                        Ek {Ek}

end




=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/channels/ampa_channel.g ===
/* 
 * interneuron simulation
 * Copyright (C) 2000 Rory Kirchner (rory@mail.csh.rit.edu)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
 *
 */

function make_AMPA_channel

   str chanpath = "AMPA"
// see  Gotz T, et al, 1997
// here adjusted to Avramas data
   float tau1 = 0.67e-3 // was 1e-3 before

// from Gotz et al, and Angulo et al 1997
// here adjusted to Avramas data instead
   float tau2 = 2e-3  //was 1 and 3e-3 before 

   float gmax = 0
   float Ek = 0.0

   echo "chanpath = "{chanpath}
   
   create synchan {chanpath}

   setfield {chanpath} tau1 {tau1} tau2 {tau2} gmax {gmax} Ek {Ek}



=== Following is the header of samples/156260/striatalnetwork/Conditions/No_Gaps/FScell/channels/k3132_channel.g ===
/* K3132 channel
 *      fills tables with values for alpha and beta and then
 *      uses tweakalpha to alter the values to A and B
 *      values for alpha and beta are taken from:
 *      J. Neurophysiology 82: 2476-2389, 1999 
 *      on page 2478
 * 
 *      the functions below convert to physiological units to do the 
 *      calulations and convert back to SI units for the output
 */

/* alpha for the type X gate (activation) */
function K3132ChanAlphaX(voltage)

    float voltage = {voltage} * 1e3 /* convert to mV */
    
    float num = {95 - {voltage}}
    float denom = {{exp {{-95 + {voltage}} / {-11.8}}} - 1}

    /* convert sec to msec */
    float act = {{num} / {denom}} * 1e3
    
    return act
end

/* beta for the type X gate (activation) */
function K3132ChanBetaX(voltage) 

    float voltage = {voltage} * 1e3 /* convert to mV */

    float num = 0.025
    float denom = {exp {{voltage} / 22.222}}

    /* convert sec to msec */
    float act = {{num} / {denom}} * 1e3

    return act
end

function make_K3132_channel 


=== Following is the header of samples/156260/striatalnetwork/Conditions/No_FB/net_func.g ===
//genesis
//net_func.g 

/*
This file sets the netowork of SP cells up by calling the function that
sets up the SP-SP inhibitory network and calling the functions that connect
extrinsic input to the SP network.This file also has the include statements
for the file that prints out the connection of the SP-SP network. 
*/

/*
function include_net (net)
str net
addglobal str cellPath
setglobal cellPath "/library/"{net}"cell"
if ({net} == "SP")
  include MScell/MScellSyn.g // Single SP neuron model with synaptic channels
  makeMScellSyn {getglobal cellPath} "MScell/MScell.p"
else 
end
if ({net} == "FS") 
  include FScell/FScellSyn.g // Single FS neuron model with synaptic channels
  makeFScellSyn {getglobal cellPath} "FScell/FScell.p"
else
end

make_spike {cellPath}/soma
add_field {cellPath}
setfield /library/{net}cell/soma/spike thresh 0  abs_refract 0.004  output_amp 1
end
*/

/****************************Begin Network description****************************************************/
function rannum_new2 (tablename)
  str tablename
  int i
  int last={getfield {tablename} X_A->xmax}  //get the index of last element from the value of xmax
  //echo "last=" {last}
  int index={ round {rand -0.499 {last+0.499}} }  //choose a random index
  int filenum={getfield {tablename} X_A->table[{index}]}  //return filenum associated with index selected above


=== Following is the header of samples/156260/striatalnetwork/graphics.g ===
/*======================================================================
  A GENESIS GUI for network models, with a  control panel, a graph with
  axis scaling, and a network view to visualize Vm in each cell
  ======================================================================*/

//=========================================
//      Function definitions used by GUI
//=========================================

function overlaytoggle(widget)
    str widget
    setfield /##[TYPE=xgraph] overlay {getfield {widget} state}
end

function change_stepsize(dialog)
   str dialog
   dt =  {getfield {dialog} value}
   setclock 0 {dt}
   echo "Changing step size to "{dt}
end
/*
function inj_toggle // toggles current injection ON/OFF
    if ({getfield /control/injtoggle state} == 1)
        setfield /injectpulse level1 1.0        // ON
    else
        setfield /injectpulse level1 0.0        // OFF
    end
end

function add_injection
   int cell_no
   cell_no = ({getfield /control/cell_no value})
   if (cell_no > {NX*NY-1})
      echo "There are only "{NX*NY}" cells - numbering begins with 0"
      return
   end
   InjCell = cell_no
   if (({getmsg /injectpulse/injcurr -outgoing -count}) > 0)
      deletemsg /injectpulse/injcurr  0 -outgoing      // only outgoing message
   end


=== Following is the header of samples/156260/striatalnetwork/Raster/spike_count.m ===
[nid_spk,t_spk] = textread('FScell.spikes', '%d    %f'      );
t_start=0;
t_end=3.0;
for i=1:max(nid_spk)
  count=0;
  for j=1:length(nid_spk)
    if (nid_spk(j)==i)
      count=count+1;
      spikes(i) = count;
    else     
    end
  end
end
%mean_spk(i)=spikes(i);
total_mean=mean(spikes)
std_spk=std(spikes)


=== Following is the header of samples/156260/striatalnetwork/Raster/load_genspk.m ===

%[nid_spk,t_spk] = textread('ex_pop.spk', '%d    %f'      );

[nid_spk,t_spk] = textread('FScell.spikes', '%d    %f'      );
t_start=0.0;
t_end=3.2;
for k=1:max(nid_spk)
      spikes = t_spk(nid_spk==k & t_spk>t_start & t_spk<t_end);
      if (isempty(spikes))
        spike_times(k,1) = 0;
        spike_freq(k)    = 0;
      else
        spike_freq(k)    = length(spikes);
        spike_times(k,1:spike_freq(k)) = spikes';
      end
end
rasterplot(spike_times(1:end,:));

for t=0:0.001:max(t_spk)
      spikes = t_spk(nid_spk==k & t_spk>t_start & t_spk<t_end);
      if (isempty(spikes))
        spike_times(k,1) = 0;
        spike_freq(k)    = 0;
      else
        spike_freq(k)    = length(spikes);
        spike_times(k,1:spike_freq(k)) = spikes';
      end
end


=== Following is the header of samples/156260/striatalnetwork/Raster/psth.m ===

[nid_spk,t_spk] = textread('SPcell.spikes', '%d    %f'      );
t_count=1;
t_hist=0:0.025:0.25;
for w=1:(length(t_hist)-1)
    for i=1:max(nid_spk)
        count=0;
        for j=1:length(nid_spk)
            if (t_spk(j)>t_hist(w) & t_spk(j)<t_hist(w+1))
                if (nid_spk(j)==i)
                count=count+1;
                spikes(t_count,i) = count;
                else     
                end
%             elseif (t_spk(j)>t_hist(w) & t_spk(j)>t_hist(w+1))
%                 if (nid_spk(j)==i)
%                 count=0;
%                 spikes(t_count,i) = count;
%                 else
%                 end
            end
        end
    end
t_count=t_count+1;
end

t_hist1=0.5:0.025:0.75;
for w=1:(length(t_hist1)-1)
    for i=1:max(nid_spk)
        count=0;
        for j=1:length(nid_spk)
            if (t_spk(j)>t_hist1(w) & t_spk(j)<t_hist1(w+1))
                if (nid_spk(j)==i)
                count=count+1;
                spikes(t_count,i) = count;
                else     
                end
%             elseif (t_spk(j)>t_hist1(w) & t_spk(j)>t_hist1(w+1))
%                 if (nid_spk(j)==i)
%                 count=0;


=== Following is the header of samples/156260/striatalnetwork/Raster/rasterplot.m ===
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This simple function receives a matrix 'spike_times' where each line represents a neuron
% index and each column represents one discrete time step where a spike might have occurred
% or not. If it has a line will be drawn otherwise nothing is done.
%
% Developed by Rodrigo F. Oliveira 2004-2006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function rasterplot(spike_times)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[n_neurons, t_spk]=size(spike_times);
cla;
hold on;
        I=1;
        for i=1:n_neurons
            s=1;
            for t_spk=1:t_spk
                %plot([stimes(i,r,s)],[i],'.','MarkerSize',3)    % use for very heavy rasterplots
                line([spike_times(i,t_spk) spike_times(i,t_spk)],[I I+0.95],'LineWidth',0.7,'Color','k')
                s=s+1;
            end
            I=I+1;
        end
set(gca,'XLim',[0 max(max(spike_times))]);
set(gca,'YLim',[1 n_neurons+1]);
title('FS new');
xlabel('Time (s)');
ylabel('Neuron index');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


=== Following is the header of samples/156260/striatalnetwork/protospike.g ===
// genesis

/* FILE INFORMATION
**
**  Function to create prototype "spikegen" element "spike"
**  with unit amplitude and 0.010 second refractory period
**
**  GENESIS 2.0
*/

function make_spike (cellpath)
str cellpath 
pushe {cellpath} 

if ({exists spike})
       return
end

        create spikegen spike
        setfield spike \
                thresh  0.00 \         // V
                abs_refract     5e-3 \ // sec
                output_amp      1
        addmsg {cellpath} spike INPUT Vm 
pope
 
end


=== Following is the header of samples/156260/striatalnetwork/MScell/parametersD.g ===
// genesis

float useAMPANMDAGHKchannels= 0  // we do not use GHK project for NMDA/AMPA

setclock 0 5e-6 //was 5e-6
        // Simulation time step (Second)       
setclock 1 2e-5        //  time step for ascii output
//setclock 1 1e-4 // time step for graphic output


// parameters for NMDA subunits


// NR2A
str	    subunit = "NR2D"
float   EkNMDA   = 0
float	Kmg       = 40
float	NMDAtau2      = (1700e-3)/2 	//NR2A average from (Vicini et al., 1998 figure 1B)
float	NMDAgmax      = 0.119e-9      //NR2A and B from (Moyner et al., 1994 figure 7)
int ghk_yesno=0

str NMDAname = {subunit}

//for saving info on distal or proximal dendrites or massed and spaced. formula typeof dend, # of spines.




=== Following is the header of samples/156260/striatalnetwork/MScell/MScell.p ===
//***************************		MS Model, Version 5.0	**********************
//*************************** 	      MScell.p 			**********************
//			Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-836
//*****************************************************************************

*relative
*cartesian
*asymmetric
*lambda_warn

*set_global ELEAK -0.070
//*set_global RA 1.0 
//*set_global RM 8.695652
*set_global RM 1.8
*set_global CM 0.010 
*set_global EREST_ACT -0.085

*start_cell /library/tert_dend
tert_dend none 35.927 0 0 0.80
tert_dend2 . 35.927 0 0 0.80 
tert_dend3 . 35.927 0 0 0.80
tert_dend4 . 35.927 0 0 0.80
tert_dend5 . 35.927 0 0 0.80 
tert_dend6 . 35.927 0 0 0.80
tert_dend7 . 35.927 0 0 0.80 
tert_dend8 . 35.927 0 0 0.80
tert_dend9 . 35.927 0 0 0.80
tert_dend10 . 35.927 0 0 0.80
tert_dend11 . 35.927 0 0 0.80
*makeproto /library/tert_dend

*start_cell /library/sec_dend

sec_dend none 24.230 0 0 1.100
*makeproto /library/sec_dend

*start_cell /library/prim_dend

prim_dend none 20.000 0 0 2.250
*makeproto /library/prim_dend


=== Following is the header of samples/156260/striatalnetwork/MScell/MScell_D1_old.g ===
//genesis

/***************************		MS Model, Version 5.11	**********************
**************************** 	      	MS_cell.g 			***************
Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
*************************
	MS_cell.g has only one externally called function: make_MS_cell. That primary 
	function uses the services of the following two local subroutines:
		set_position
		add_channels

******************************************************************************/

include MScell/globals 		// Defines & initializes cell specific parameters

include MScell/addchans	// provides access to add_uniform_channel & add_CaShells 
					// as required by local subroutine add_channels
include MScell/proto  // provides access to make_prototypes required by primary
					// routine make_MS_cell
    	
//************************ Begin Local Subroutines ****************************
//*****************************************************************************

	//************************ Begin function set_position *********************
	//**************************************************************************
	function set_position (cellpath)
		//********************* Begin Local Variables ************************
 		str compt, cellpath
 		float dist2soma,x,y,z
 		//********************* End Local Variables *****************************
 		
 		if (!{exists {cellpath}})
  			echo The current input {cellpath} does not exist (set_position) 
  			return
 		end
 
 		foreach compt ({el {cellpath}/##[TYPE=compartment]})
     		  x={getfield {compt} x}
     		  y={getfield {compt} y}
     		  z={getfield {compt} z}


=== Following is the header of samples/156260/striatalnetwork/MScell/proto.g ===
//genesis

/***************************		MS Model, Version 5.12	**********************
**************************** 	      	proto.g 				**********************
Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
*******************************************************************************
	proto.g contains one primary routine:  
		make_prototypes
 	and two local routines 
		make_cylind_compartment
		make_spines - this one needs much work
	these are used by the primary and are not intended for external calls
	The primary function, make_prototypes is called exactly once by MSsim.g
AB: removed CaNNOINACT_channel and CaL12NOINACT_channel by combining with inactivating channels
AB: deleted CaQ because no evidence for such in SP, and doesn't contribute much anyway
AB: no longer making naP in the library since it is not used, and has been moved to a different directory
******************************************************************************/

include MScell/include_channels.g		// required for calls in make_protypes

//************************ Begin Local Subroutines ****************************

	//********************* Begin function make_cylind_compartment *************
	function make_cylind_compartment
		if (!{exists compartment})
			echo "COMPARTMENT DID NOT EXIST PRIOR TO CALL TO:"
			echo 			"make_cylind_compartment"
			create	compartment compartment
                        addfield compartment position   // add a new field "postion" to store distance to soma
		end

	setfield compartment 		\ 
     		Em         {ELEAK} 	\
      	        initVm     {EREST_ACT} 	\
		inject		0.0 	\
      	        position    0.0
	end
	//************************ End function make_cylind_compartment ************

	//**************************************************************************


=== Following is the header of samples/156260/striatalnetwork/MScell/AddCaSpines.g ===
 //function to add calcium channels to spines 
function addCaChannelspines(channelName, compPath, conductance, caBufferName)
  str channelName, compPath
  float conductance
  str caBufferName

  pushe {compPath}

    // Copy the channel from library
    copy /library/{channelName} {channelName}
    copy /library/{channelName}GHK {channelName}GHK

    // Set the new conductance
    float len = {getfield {compPath} len}
    float dia = {getfield {compPath} dia}
    float pi = 3.141592653589793
    float surf = {len*dia*pi} 

    // echo "Channel: "{channelName}", conductance "{conductance}"S/m²"
    // echo "Compartment: "{compPath}", surface area "{surf}"m²"
    setfield {channelName} Gbar {conductance*surf}

    // Couple channel to caBuffer

coupleCaBufferCaChannel {caBufferName} {compPath} {channelName}

    // Couple channel, its GHK object and compartment together
    addmsg {compPath} {channelName}GHK VOLTAGE Vm
    addmsg {compPath} {channelName} VOLTAGE Vm
    addmsg {channelName}GHK {compPath} CHANNEL Gk Ek
    addmsg {channelName} {channelName}GHK PERMEABILITY Gk

//     float len = {getfield {compPath} len}
//     float dia = {getfield {compPath} dia}
//     float pi = 3.141592653589793
//     float surf = {len*dia*pi}

//     // echo "conductance (unscaled): "{conductance}
//     // echo "Compartment: "{compPath}" surface area "{surf}"m²"
//     setfield {channelName} Gbar {conductance*surf}


=== Following is the header of samples/156260/striatalnetwork/MScell/MScell08.p ===
//***************************		MS Model, Version 5.0	**********************
//*************************** 	      MScell.p 			**********************
//			Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-836
//*****************************************************************************

*relative
*cartesian
*asymmetric
*lambda_warn

*set_global ELEAK -0.070
//*set_global RA 1.0 
//*set_global RM 8.695652
*set_global RM 1.8
*set_global CM 0.010 
*set_global EREST_ACT -0.085

*start_cell /library/tert_dend
tert_dend none 35.927 0 0 0.80
tert_dend2 . 35.927 0 0 0.80 
tert_dend3 . 35.927 0 0 0.80
tert_dend4 . 35.927 0 0 0.80
tert_dend5 . 35.927 0 0 0.80 
tert_dend6 . 35.927 0 0 0.80
tert_dend7 . 35.927 0 0 0.80 
tert_dend8 . 35.927 0 0 0.80
tert_dend9 . 35.927 0 0 0.80
tert_dend10 . 35.927 0 0 0.80
tert_dend11 . 35.927 0 0 0.80
*makeproto /library/tert_dend

*start_cell /library/sec_dend

sec_dend none 24.230 0 0 1.100
*makeproto /library/sec_dend

*start_cell /library/prim_dend

prim_dend none 20.000 0 0 2.250
*makeproto /library/prim_dend


=== Following is the header of samples/156260/striatalnetwork/MScell/parametersC.g ===
// genesis

float useAMPANMDAGHKchannels= 0  // we do not use GHK project for NMDA/AMPA

setclock 0 5e-6 //was 5e-6
        // Simulation time step (Second)       
setclock 1 2e-5        //  time step for ascii output
//setclock 1 1e-4 // time step for graphic output


// parameters for NMDA subunits


// NR2A
str	    subunit = "NR2C"
float   EkNMDA   = 0
float	Kmg       = 25
float	NMDAtau2      = (250e-3)/2 	//NR2A average from (Vicini et al., 1998 figure 1B)
float	NMDAgmax      = 0.325e-9      //NR2A and B from (Moyner et al., 1994 figure 7)
int ghk_yesno=0

str NMDAname = {subunit}

//for saving info on distal or proximal dendrites or massed and spaced. formula typeof dend, # of spines.




=== Following is the header of samples/156260/striatalnetwork/MScell/DA_files.txt ===
/MScell
MScellSyn.g
MScell.g
globals.g
parametersA.g
include_channels

/MScell/Channels
nmda_channel.g
ca1.3
naf



=== Following is the header of samples/156260/striatalnetwork/MScell/MScellSpineTh.g ===
//genesis
//MScellSpine.g
//This routine takes the MScell without synapses, and adds synapses

include MScell/MScell.g                 //MScell without synapses
include MScell/SynParamsTh.g               //parameters on synaptic channels
include MScell/channels/nmda_channel.g   //function to make nmda channel, either GHK or not, in library
include MScell/channels/synaptic_channel.g // function to make non nmda synaptic channels in library
include MScell/AddSynapticChannels.g	// contains functions to add channels to compartments
include MScell/spines.g           //creates spines, puts channels & calcium in spines


function make_MS_cell_spine (cellname,pfile)
   str cellname,pfile

   str CompName

   make_MS_cell {cellname} {pfile}

	//************* create synaptic channels in library *********
	pushe /library

  	make_synaptic_channel  {AMPAname} {AMPAtau1} {AMPAtau2} {AMPAgmax} {EkAMPA}
  	make_NMDA_channel    {NMDAname} {EkNMDA} {Kmg} {NMDAtau2} {NMDAgmax} {ghk_yesno}
	make_synaptic_channel  {GABAname} {GABAtau1} {GABAtau2} {GABAgmax} {EkGABA}


	make_spines

        pope {cellname}
	
   //********************* end synaptic channels in library **************


  //**************SPINES*************************/
    /* these functions needs to be modified.  The following 3 should be optional
        1. allow for putting synaptic channels on spines in library
        2. use new calcium functions and optionally create such in spine
        3. possibly vdep channels in the spines
    */


=== Following is the header of samples/156260/striatalnetwork/MScell/globals.g ===
//genesis

/***************************		MS Model, Version 5.10	**********************
**************************** 	      	globals.g 			**********************
Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
*******************************************************************************
	The capatilized parameters defined below are global and visable to all files
	Capatilized parameters should be treated as constants
******************************************************************************/
/* AB: Comments indicate the qfactor used with the various channels
*  conductance of CaN and CaL12 sum the inactivating and non-inactivating channel
*  conductances from the previous model
*/
        float ELEAK = -0.070
        float PI = 3.1415926
        float RA = 1.0;
        float RM = 8.69565217;
        float CM = 0.01;
        float EREST_ACT = -0.085
 	float TEMPERATURE = 35
	str  CA_BUFF_1 = "Ca_difshell_1"     // L and T type channels
	str  CA_BUFF_2 = "Ca_difshell_2"     // coupled to the other channels
	str  CA_BUFF_3 = "Ca_difshell_3"     // all calcium channels
	
	int CaDyeFlag = 0    // flags of calcium dye. "0" means NO calcium dyes.
                     // flag =2 : Fluo-4
                     // flag =3 : Fluo-5F
	int shellMode = 1     // we  have two shell-modes:
                     //  mode = 0 : detailed multi-shell model, using "difshell" object
                     //  mode = 1 : simple calcium pool adopted from  Sabatini's work(Sabatini, 2001, 2004)

//parameters determined by hand tuning to match spike width, AHP shape &amp, fI curve
//spike width with these globals plus spines = 0.88 ms
        str gNaFprox_D1={85500}  //qfactor = 1.2   // 95%
        str gNaFmid_D1={2594}    //95%
        str gNaFdist_D1={927}    //95%

        str gNaFprox_D2={99000}  //qfactor = 1.2 //110% 
        str gNaFmid_D2={3003}    //110%
        str gNaFdist_D2={1073}    //110%


=== Following is the header of samples/156260/striatalnetwork/MScell/SynParamsCtx.g ===
//genesis
//SynParams.g

	str AMPAname = "AMPA"
	float EkAMPA = 0.0
        float AMPAtau1 = 1.1e-3
        float AMPAtau2 = 5.75e-3 
        float AMPAgmax = 0.342e-9  //593e-12 I changed this to make the NMDA/AMPA ratio more like 2.75/1 which is what Ding 2008 finds int corticalstriatal synapses
									//more like 2/1 for thalamus so should be 0.47e-9 for thalamo-striatal syanpnse if NMDA is 0.94e-9 Rebekah Evans 6/25/10

        str GABAname = "GABA"
        float GABAtau1 = 0.25e-3    // From Galarreta and Hestrin 1997 
        float GABAtau2 = 3.75e-3    //(used in Wolfs model)
        float EkGABA = -0.060
        float GABAgmax = 750e-12  //Modified Koos 2004 (Wolf uses 435e-12)

	int GABA2Spine = 0                                // = 0, No GABA; 
                                                  //   1, add GABA to spine head
                                                  //   2, add GABA to spine neck
	
	int addCa2Spine = 1		// 0, no ca channels in spine, 
					//1, yes ca channels in spine (non-synaptic)
	int NMDABufferMode = 0          // 1, connect both NMDA and AMPA calcium to NMDA_buffer
                                     // 0, connect only NMDA currents to NMDA_buffer

float useAMPANMDAGHKchannels= 0  // we do not use GHK project for NMDA/AMPA

setclock 0 5e-6 //was 5e-6
        // Simulation time step (Second)       
setclock 1 2e-5        //  time step for ascii output
//setclock 1 1e-4 // time step for graphic output


// parameters for NMDA subunits


// cortex
str	    subunit = "Cortex"
float   EkNMDA   = 0
float	Kmg       = 3.57


=== Following is the header of samples/156260/striatalnetwork/MScell/include_channels.g ===
//genesis
//include_channels.g
/*******
AB: removed CaNNOINACT_channel and CaL12NOINACT_channel by combining with inactivating channels
AB: deleted CaQ because no evidence for such in SP, and doesn't contribute much anyway
AB: Also, removed KRP channels from here because we're not using them
AB: no longer making naP in the library since it is not used, and has been moved to a different directory
**********/

include MScell/channels/tabchanforms.g
//calcium channels
include MScell/channels/CaL12inact_channel
include MScell/channels/CaL13_channel
include MScell/channels/CaNinact_channel
//include MScell/channels/CaQ_channel
include MScell/channels/CaR_channel
include MScell/channels/CaT_channel

//voltage dependent channels
include MScell/channels/naF_chanOg
//include MScell/channels/naP_channel
include MScell/channels/kAf_chanRE
include MScell/channels/kIR_chanKD
include MScell/channels/kAs_chanRE
include MScell/channels/K_DR_channel

//calcium dependent potassium channels
include MScell/channels/BKKchannel
include MScell/channels/SKchannelCaDep




=== Following is the header of samples/156260/striatalnetwork/MScell/addoutput_old.g ===
//addoutput.g
	// function for saving parameter in ascii file.  
	//function is made and called in this file
	
//make function 

function sav_disk_asc(diskpath,srcpath,field)
    create asc_file /output/{diskpath}
    setfield /output/{diskpath}   flush 1  leave_open 1 append 1 \
          float_format %0.6g
    useclock /output/{diskpath} 0
    setfield /output/{diskpath} filename output/{diskpath}
    addmsg {srcpath} /output/{diskpath}  SAVE {field}
    call /output/{diskpath} OUT_OPEN
    call /output/{diskpath} OUT_WRITE "time #1" //header
    echo {diskpath}
end
		
		
		
//call function
	
	/*******************save soma information****************************************************
		//sav_disk_asc somaVm{subunit}{stimtype} {cellpath}/soma Vm
	*******************************************************************************************/
	
	/*******************save secondary dendrite parameters**************************************
		//sav_disk_asc dendCa{subunit}{stimtype} {cellpath}/secdend3/{CalciumBuffer_3} Ca  
		//sav_disk_asc NMDACa{subunit}{stimtype} {cellpath}/secdend3/spine_1/head/buffer_NMDA Ca
		//sav_disk_asc spineCa{subunit}{stimtype} {cellpath}/secdend3/spine_1/head/SpineCa Ca
		//sav_disk_asc LspineCa{subunit}{stimtype} {cellpath}/secdend3/spine_1/head/SpineCaL Ca
		//sav_disk_asc Ikblock{subunit}{stimtype} {cellpath}/secdend3/spine_1/head/{subunit}/block Ik
		//sav_disk_asc spineVm{subunit}{stimtype} {cellpath}/secdend3/spine_1/head Vm
	*******************************************************************************************/
 
	/******************save tertiary dendrite information****************************************
		sav_disk_asc dendCa{subunit}{stimtype}3 {cellpath}/tertdend3/{CalciumBuffer_3} Ca
	//	sav_disk_asc spineCa{subunit}{stimtype}3 {cellpath}/tertdend3/tert_dend5/spine_1/head/buffer_NMDA
	//	sav_disk_asc Ikblock{subunit}{stimtype}3 {cellpath}/tertdend3/tert_dend5/spine_1/head/{subunit}/block Ik Ca
	//	sav_disk_asc spineVm{subunit}{stimtype}3 {cellpath}/tertdend3/tert_dend5/spine_1/head Vm


=== Following is the header of samples/156260/striatalnetwork/MScell/MScell_D2_old.g ===
//genesis

/***************************		MS Model, Version 5.11	**********************
**************************** 	      	MS_cell.g 			***************
Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
*************************
	MS_cell.g has only one externally called function: make_MS_cell. That primary 
	function uses the services of the following two local subroutines:
		set_position
		add_channels

******************************************************************************/

include MScell/globals  		// Defines & initializes cell specific parameters

include MScell/addchans	// provides access to add_uniform_channel & add_CaShells 
					// as required by local subroutine add_channels
include MScell/proto  // provides access to make_prototypes required by primary
					// routine make_MS_cell
    	
//************************ Begin Local Subroutines ****************************
//*****************************************************************************

	//************************ Begin function set_position *********************
	//**************************************************************************
	function set_position (cellpath)
		//********************* Begin Local Variables ************************
 		str compt, cellpath
 		float dist2soma,x,y,z
 		//********************* End Local Variables *****************************
 		
 		if (!{exists {cellpath}})
  			echo The current input {cellpath} does not exist (set_position) 
  			return
 		end
 
 		foreach compt ({el {cellpath}/##[TYPE=compartment]})
     		  x={getfield {compt} x}
     		  y={getfield {compt} y}
     		  z={getfield {compt} z}


=== Following is the header of samples/156260/striatalnetwork/MScell/connectCaChannels.g ===
//genesis

/***************************		MS Model, Version 5.5	*********************
**************************** 	  		makeCaChannels.g 		*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/

function coupleCaBufferCaChannel(bufferName, compPath, caChannelName)
// called only from function add_uniform_channel in adjust.g
  str bufferName
  str compPath
  str caChannelName

  pushe {compPath}

  if({isa difshell {compPath}/{bufferName}})
    addmsg {caChannelName}GHK {bufferName} INFLUX Ik 
    addmsg {bufferName} {caChannelName}GHK CIN C
  elif({isa Ca_concen {compPath}/{bufferName}})
    addmsg {caChannelName}GHK {bufferName} I_Ca Ik 
    addmsg {bufferName} {caChannelName}GHK CIN Ca  
  end

  pope {compPath}

end

function coupleCaBufferCaChannel1(bufferName, compPath, caChannelName)
// called only from function add_uniform_channel in adjust.g
  str bufferName
  str compPath
  str caChannelName

  pushe {compPath}

  if({isa difshell {compPath}/{bufferName}})
    addmsg {caChannelName}GHK {bufferName} INFLUX Ik 
  elif({isa Ca_concen {compPath}/{bufferName}})
    addmsg {caChannelName}GHK {bufferName} I_Ca Ik 


=== Following is the header of samples/156260/striatalnetwork/MScell/MScell08CM3_D2.p ===
//***************************		MS Model, Version 5.0	**********************
//*************************** 	      MScell.p 			**********************
//			Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-836
//*****************************************************************************

*relative
*cartesian
*asymmetric
*lambda_warn

*set_global ELEAK -0.070
//*set_global RA 1.0 
//*set_global RM 8.695652  1.8 1.83-0.0295  1.86-0.029  1.96-0.0275 2.16-0.025
*set_global RM 1.8  //1.8-0.03
//*set_global CM 0.010 
//change Cm to account for no spines - make 3x higher?  0.03  0.025
*set_global CM 0.03
*set_global EREST_ACT -0.085

*start_cell /library/tert_dend
tert_dend none 35.927 0 0 0.80
tert_dend2 . 35.927 0 0 0.80 
tert_dend3 . 35.927 0 0 0.80
tert_dend4 . 35.927 0 0 0.80
tert_dend5 . 35.927 0 0 0.80 
tert_dend6 . 35.927 0 0 0.80
tert_dend7 . 35.927 0 0 0.80 
tert_dend8 . 35.927 0 0 0.80
tert_dend9 . 35.927 0 0 0.80
tert_dend10 . 35.927 0 0 0.80
tert_dend11 . 35.927 0 0 0.80
*makeproto /library/tert_dend

*start_cell /library/sec_dend

sec_dend none 24.230 0 0 1.100
*makeproto /library/sec_dend

*start_cell /library/prim_dend



=== Following is the header of samples/156260/striatalnetwork/MScell/parametersA_D1.g ===
// genesis

float useAMPANMDAGHKchannels= 0  // we do not use GHK project for NMDA/AMPA

setclock 0 5e-6 //was 5e-6
        // Simulation time step (Second)       
setclock 1 2e-5        //  time step for ascii output
//setclock 1 1e-4 // time step for graphic output


// parameters for NMDA subunits


// NR2A
str	    subunit = "NR2A"
float   EkNMDA   = 0
float	Kmg       = 3.57
float	NMDAtau2      = (112e-3)/2 	// 50e-3 changed to 112 to include 25%NR2B NR2A average from (Vicini et al., 1998 figure 1B)
float	NMDAgmax      = 0.507e-9      // 0.39 before D1 modulation NR2A and B from (Moyner et al., 1994 figure 7) //0.94e-9 - NMDA
int ghk_yesno=0

str NMDAname = {subunit}

//for saving info on distal or proximal dendrites or massed and spaced. formula typeof dend, # of spines.




=== Following is the header of samples/156260/striatalnetwork/MScell/MScellSyn_D1.g ===
//genesis
//MScellSyn.g
//This routine takes the MScell without synapses, and adds synapses

include MScell/MScell_D1.g                 //MScell without synapses
include MScell/SynParams_D1.g               //parameters on synaptic channels
include MScell/channels/nmda_channel.g   //function to make nmda channel, either GHK or not, in library
include MScell/channels/synaptic_channel.g // function to make non nmda synaptic channels in library
include MScell/AddSynapticChannels.g	// contains functions to add channels to compartments

function makeMScellSyn (cellname,pfile)
   str cellname,pfile

   str CompName

   make_MS_cell {cellname} {pfile}

	//************* create synaptic channels in library *********
	pushe /library

  	make_synaptic_channel  {AMPAname} {AMPAtau1} {AMPAtau2} {AMPAgmax} {EkAMPA}
  	make_NMDA_channel    {NMDAname} {EkNMDA} {Kmg} {NMDAtau2} {NMDAgmax} {ghk_yesno}
	make_synaptic_channel  {GABAname} {GABAtau1} {GABAtau2} {GABAgmax} {EkGABA}

        pope {cellname}
	
   //********************* end synaptic channels in library **************

      foreach CompName ({el {cellname}/##[TYPE=compartment]}) 
        addNMDAchannel {CompName} {NMDAname} {CA_BUFF_3} {NMDAgmax} {ghk_yesno}
        addSynChannel  {CompName} {AMPAname} {AMPAgmax}
        addSynChannel  {CompName} {GABAname} {GABAgmax}
      end
  ce /

end


=== Following is the header of samples/156260/striatalnetwork/MScell/parametersB.g ===
// genesis

float useAMPANMDAGHKchannels= 0  // we do not use GHK project for NMDA/AMPA

setclock 0 5e-6 //was 5e-6
        // Simulation time step (Second)       
setclock 1 2e-5        //  time step for ascii output
//setclock 1 1e-4 // time step for graphic output


// parameters for NMDA subunits


// NR2A
str	    subunit = "NR2B"
float   EkNMDA   = 0
float	Kmg       = 3.57
float	NMDAtau2      = (300e-3)/2 	//NR2A average from (Vicini et al., 1998 figure 1B)
float	NMDAgmax      = 0.94e-9      //NR2A and B from (Moyner et al., 1994 figure 7)
int ghk_yesno=0

str NMDAname = {subunit}

//for saving info on distal or proximal dendrites or massed and spaced. formula typeof dend, # of spines.




=== Following is the header of samples/156260/striatalnetwork/MScell/unusedChannels/CaQ_channel.g ===
//genesis

/***************************		MS Model, Version 5.2	*********************
**************************** 	  		CaQ_channel.g 			*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/

function create_CaQ
	str chanName = "CaQ_channel"
	str compPath = "/library"

	int c = 0	
	float increment = 0.00005	
	float x = -0.1
	int xdivs = 3000
	float xmin = -0.1
	float xmax = 0.05
  	float mPower = 1.0
  	float hPower = 0.0

	float mvHalfCaQ = -9.0e-3
	float mkCaQ = -6.6e-3
	float mInfCaQ= 0.0
	float mTauCaQ = 0.0

	float surf = 0.0
	float qFactCaN = {3.0/{CaSlow}}
	float gMax = 6.0e-008

	float theta = 0.0
	float theta_exp = 0.0

	pushe {compPath}

	create tabchannel {chanName}
  	setfield {chanName} Xpower {mPower} Ypower {hPower}
	call {chanName} TABCREATE X {xdivs} {xmin} {xmax}

	for(c = 0; c < {xdivs} + 1; c = c + 1)


=== Following is the header of samples/156260/striatalnetwork/MScell/unusedChannels/CaNNOINACT_channel.g ===
//genesis

/***************************		MS Model, Version 5.2	*********************
**************************** 	  CaNNOINACT_channel.g 		*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/

function create_CaNNOINACT
	str chanName = "CaNNOINACT_channel"
	str compPath = "/library"

	int c = 0	
	float increment = 0.00005	
	float x = -0.1
	int xdivs = 3000
	float xmin = -0.1
	float xmax = 0.05
  	float mPower = 1.0
  	float hPower = 0.0

	float mvHalfCaN = -8.7e-3
	float mkCaN = -7.4e-3
	float mTauCaNNOINACT = 0.0
	float mInfCaNNOINACT = 0.0

	float theta	= 0.0
	float beta	= 0.0
	float beta_exp	= 0.0
	float mA	= 0.0
	float mB	= 0.0
	float surf = 0.0
	int qFactCaN = {3.0/{CaSlow}}
	float gMax = 7.9e-008

	pushe {compPath}

	create tabchannel {chanName}
  	setfield {chanName} Xpower {mPower} Ypower {hPower}
	call {chanName} TABCREATE X {xdivs} {xmin} {xmax}


=== Following is the header of samples/156260/striatalnetwork/MScell/unusedChannels/CaL12NOINACT_channel.g ===
//genesis

/***************************		MS Model, Version 5.2	*********************
**************************** 	  CaL12NOINACT_channel.g 	*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/

function create_CaL12NOINACT
	str chanName = "CaL12NOINACT_channel"
	str compPath = "/library"
	int c

	float xmin = -0.1
	float xmax = 0.05
	int 	xdivs = 3000
	float mPower = 1.0
	float hPower = 0.0
	
	float increment = 0.00005	
	float x = -0.1
  	float surf = 0
 	float gMax = 5.5610000e-008  

	float CaL12NOINACT_mTau = 0.0
	float CaL12NOINACT_mInf	= 0.0
	float mvHalfCaL12 = -8.9e-3
	float mkCaL12     = -6.7e-3

	float theta	= 0.0
	float beta	= 0.0
	float beta_exp	= 0.0
	float mA = 0.0
	float mB = 0.0
	float qFactCaL12 	= {3.0/{CaSlow}}
		
	pushe {compPath}

	create tabchannel {chanName}
  	setfield {chanName} Xpower {mPower} Ypower {hPower}


=== Following is the header of samples/156260/striatalnetwork/MScell/unusedChannels/CaN_channel.g ===
//genesis

/***************************		MS Model, Version 5.2	*********************
**************************** 	  		CaN_channel.g 			*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/

function create_CaN
	str chanName = "CaN_channel"
	str compPath = "/library"

	int c	
	float increment = 0.00005	
	float x = -0.1
	int xdivs = 3001
	float xmin = -0.1
	float xmax = 0.05
  	float mPower = 1.0
  	float hPower = 1.0

	float mvHalfCaN = -8.7e-3
	float mkCaN = -7.4e-3
	float hvHalfCaN = -74.8e-3
	float hkCaN = 6.5e-3
	float mTauCaN = 0.0
	float mInfCaN = 0.0
	float hTauCaN = 2.333e-002
	float hInfCaN = 0.0

	float theta	= 0.0
	float theta_1 = 0.0
	float beta	= 0.0
	float beta_exp	= 0.0
	float mA	= 0.0
	float mB	= 0.0
	float surf = 0.0
	float qFactCaN = 2
	float gMax = 2.10e-008



=== Following is the header of samples/156260/striatalnetwork/MScell/unusedChannels/CaL12_channel.g ===
//genesis

/***************************		MS Model, Version 5.2	*********************
**************************** 	    	CaL12channel.g 		*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/

function create_CaL12
	str chanName = "CaL12_channel"
	str compPath = "/library"
	int c

	float xmin = -0.1
	float xmax = 0.05
	int 	xdivs = 3000
	float mPower = 1.0
	float hPower = 1.0
	
	float increment = 0.00005	
	float x = -0.1
  	float surf = 0
 	float gMax = 1.1390000e-008  

	float hTauCaL12 	= 1.477e-002
	float mTauCaL12 	= 0.0
	float mvHalfCaL12 = -8.9e-3
	float mkCaL12     = -6.7e-3
	float hvHalfCaL12 = -13.4e-3
	float hkCaL12     = 11.9e-3
	float hInfCaL12	= 0.0
	float mInfCaL12	= 0.0

	float theta	= 0.0
	float beta	= 0.0
	float beta_exp	= 0.0
	float mA = 0.0
	float mB = 0.0
	float qFactCaL12 	=2
	


=== Following is the header of samples/156260/striatalnetwork/MScell/unusedChannels/naP_channel.g ===
//genesis

/***************************		MS Model, Version 5.2	*********************
**************************** 	    	naP_channel.g 			*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/



/* Na Persistent channel
 *	In the original program written by Johanes Hjorth a set of MatLab 
 *	routines in striatum/mspn/vectMakers opened a set of text (data) files in 
 *	striatum/mspn/tau_tables and used those to create a set of of text (data)
 * files in striatum/mspn/channels/vecs.
 * The product of this sequence was then opened by a set of genesis
 *	routines in striatum/mspn/channels to populate an approprite set of tabchannels
 * An example is as follows
 *		striatum/mspn/vectMakers/makeNaPtable.m reads:
 *				striatum/mspn/tau_tables/vtau_nap.txt
 *		and then writes:
 *				striatum/mspn/channels/vecs/nap_taum.txt	
 *				striatum/mspn/channels/vecs/nap_tauh.txt
 *				striatum/mspn/channels/vecs/nap_minf.txt
 *				striatum/mspn/channels/vecs/nap_hinf.txt
 *		Later in the running code control shifts to function make_NaP_channel
 *		(in striatum/mspn/channels/naP_channel.g). This function will read those 
 * 	same four files and use them to create the tabchannel NaP_channel
 *
 * In the rework by Kai_Du the MatLab files are remeoved but their product (the
 * four data files noted above are retained.
 *
 * This revision moves the MatLab calculations to the .g file that is creating
 * the tabchannel and removes the data files (four for each channel). In the example 
 * case given above directory vecs has been deleted which removes nap_taum.txt etc,
 * and function make_NaP_channel has been modified to calculate the data in those 
 * files and place it directly into the appropritate tabchannel 
 *************** Tom Sheehan 1/10/09	703-538-8361********************************/
 
function make_NaP_channel 


=== Following is the header of samples/156260/striatalnetwork/MScell/globals_old.g ===
//genesis

/***************************		MS Model, Version 5.10	**********************
**************************** 	      	globals.g 			**********************
Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
*******************************************************************************
	The capatilized parameters defined below are global and visable to all files
	Capatilized parameters should be treated as constants
******************************************************************************/
/* AB: Comments indicate the qfactor used with the various channels
*  conductance of CaN and CaL12 sum the inactivating and non-inactivating channel
*  conductances from the previous model
*/
        float ELEAK = -0.070
        float PI = 3.1415926
        float RA = 1.0;
        float RM = 8.69565217;
        float CM = 0.01;
        float EREST_ACT = -0.085
 	float TEMPERATURE = 35
	str  CA_BUFF_1 = "Ca_difshell_1"     // L and T type channels
	str  CA_BUFF_2 = "Ca_difshell_2"     // coupled to the other channels
	str  CA_BUFF_3 = "Ca_difshell_3"     // all calcium channels
	
	int CaDyeFlag = 0    // flags of calcium dye. "0" means NO calcium dyes.
                     // flag =2 : Fluo-4
                     // flag =3 : Fluo-5F
	int shellMode = 1     // we  have two shell-modes:
                     //  mode = 0 : detailed multi-shell model, using "difshell" object
                     //  mode = 1 : simple calcium pool adopted from  Sabatini's work(Sabatini, 2001, 2004)

//parameters determined by hand tuning to match spike width, AHP shape &amp, fI curve
//spike width with these globals plus spines = 0.88 ms
        str gNaFprox_D1={99000}  //qfactor = 1.2   // 95%
        str gNaFmid_D1={3003}    //95%
        str gNaFdist_D1={1073}    //95%

        str gNaFprox_D2={99000}  //qfactor = 1.2 //110% 
        str gNaFmid_D2={3003}    //110%
        str gNaFdist_D2={1073}    //110%


=== Following is the header of samples/156260/striatalnetwork/MScell/globalsCaComp.g ===
//genesis

/***************************		MS Model, Version 5.10	**********************
**************************** 	      	globals.g 			**********************
Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
*******************************************************************************
	The capatilized parameters defined below are global and visable to all files
	Capatilized parameters should be treated as constants
******************************************************************************/
/* AB: Comments indicate the qfactor used with the various channels
*  conductance of CaN and CaL12 sum the inactivating and non-inactivating channel
*  conductances from the previous model
*/
        float ELEAK = -0.070
        float PI = 3.1415926
        float RA = 1.0;
        float RM = 8.69565217;
        float CM = 0.01;
        float EREST_ACT = -0.085
 	float TEMPERATURE = 35
	str  CA_BUFF_1 = "Ca_difshell_1"     // L and T type channels
	str  CA_BUFF_2 = "Ca_difshell_2"     // coupled to the other channels
	str  CA_BUFF_3 = "Ca_difshell_3"     // all calcium channels
	
	int CaDyeFlag = 0    // flags of calcium dye. "0" means NO calcium dyes.
                     // flag =2 : Fluo-4
                     // flag =3 : Fluo-5F
	int shellMode = 1     // we  have two shell-modes:
                     //  mode = 0 : detailed multi-shell model, using "difshell" object
                     //  mode = 1 : simple calcium pool adopted from  Sabatini's work(Sabatini, 2001, 2004)

//parameters determined by hand tuning to match spike width, AHP shape &amp, fI curve
//spike width with these globals plus spines = 0.88 ms
        str gNaFprox={90000}  //qfactor = 1.2   
        str gNaFmid={2730}
        str gNaFdist={975}

        str gKAfprox={3214}   //qfactor=1.5 for inact
        str gKAfmid={471}     //1/qfactor=1.5 for act!!!
        str gKAfdist={314}


=== Following is the header of samples/156260/striatalnetwork/MScell/AddSynapticChannels.g ===
//genesis

/***************************		MS Model, Version 5.12	**********************
**************************** 	     SynapticChannels.g 	**********************
Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************/

/* needs work to remove need for caBuffer at this point */

function addNMDAchannel(compPath, chanpath,caBuffer, gbar, ghk)

  str compPath, chanpath
  float gbar
  str caBuffer 

  copy /library/{chanpath} {compPath}/{chanpath}
  addmsg {compPath} {compPath}/{chanpath}/block VOLTAGE Vm
  addmsg {compPath} {compPath}/{chanpath} VOLTAGE Vm
  if (ghk==0)
    addmsg {compPath}/{chanpath}/block {compPath} CHANNEL Gk Ek
  end

  if (ghk==1)
    addmsg {compPath} {compPath}/{chanName}/GHK VOLTAGE Vm
    addmsg {compPath}/{chanName}/GHK {compPath} CHANNEL Gk Ek
  end

  // Set the new conductance
  float len = {getfield {compPath} len}
  float dia = {getfield {compPath} dia}
  float pi = 3.141592653589793
  float surf = {len*dia*pi}

/*	echo "XXXXXXXXXXXXXXX addNMDAchannel XXXXXXXXXXXXXXXX"
	echo "compPath = "{compPath}
	echo "chanpath = "{chanpath}
	echo "caBuffer = "{caBuffer}
	echo "gbar = "{gbar}
	echo "XXXXXXXXXXXXXXX addNMDAchannel XXXXXXXXXXXXXXXX"
*/


=== Following is the header of samples/156260/striatalnetwork/MScell/addinput.g ===

//addinput.g
//these two functions used to provide random spike synaptic input to neuron

function makeinputpre(rate, path)
    str rate
	str path
    create randomspike {path}/randomspike
    setfield ^ min_amp 1.0 max_amp 1.0 rate {rate} reset 1 reset_value 0	
 end
	
function makeinputpost(pathspike, path) 
	str path
	int msgnum
	addmsg {pathspike} {path} SPIKE
    msgnum = {getfield {path} nsynapses} - 1
    setfield {path} \
    synapse[{msgnum}].weight 1 synapse[{msgnum}].delay 0
end


function stopinput(path)
str path
deletemsg {path} 2 -incoming
end




=== Following is the header of samples/156260/striatalnetwork/MScell/MScell08CM3_old.p ===
//***************************		MS Model, Version 5.0	**********************
//*************************** 	      MScell.p 			**********************
//			Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-836
//*****************************************************************************

*relative
*cartesian
*asymmetric
*lambda_warn

*set_global ELEAK -0.070
//*set_global RA 1.0 
//*set_global RM 8.695652
*set_global RM 1.8
//*set_global CM 0.010 
//change Cm to account for no spines - make 3x higher?
*set_global CM 0.03  
*set_global EREST_ACT -0.085

*start_cell /library/tert_dend
tert_dend none 35.927 0 0 0.80
tert_dend2 . 35.927 0 0 0.80 
tert_dend3 . 35.927 0 0 0.80
tert_dend4 . 35.927 0 0 0.80
tert_dend5 . 35.927 0 0 0.80 
tert_dend6 . 35.927 0 0 0.80
tert_dend7 . 35.927 0 0 0.80 
tert_dend8 . 35.927 0 0 0.80
tert_dend9 . 35.927 0 0 0.80
tert_dend10 . 35.927 0 0 0.80
tert_dend11 . 35.927 0 0 0.80
*makeproto /library/tert_dend

*start_cell /library/sec_dend

sec_dend none 24.230 0 0 1.100
*makeproto /library/sec_dend

*start_cell /library/prim_dend



=== Following is the header of samples/156260/striatalnetwork/MScell/SynParams_D1.g ===
//genesis
//SynParams.g

	str AMPAname = "AMPA"
	float EkAMPA = 0.0
        float AMPAtau1 = 1.1e-3
        float AMPAtau2 = 5.75e-3 
        float AMPAgmax = 109e-12 //593e-12 keeping with 2.75/1 NMDA/AMPA ratio

        str GABAname = "GABA"
        float GABAtau1 = 0.25e-3    // From Galarreta and Hestrin 1997 
        float GABAtau2 = 3.75e-3    //(used in Wolfs model)
        float EkGABA = -0.060
        float GABAgmax = 900e-12  //750e-12Modified Koos 2004 (Wolf uses 435e-12)

	int GABA2Spine = 1                                // = 0, No GABA; 
                                                  //   1, add GABA to spine head
                                                  //   2, add GABA to spine neck
	
	int addCa2Spine = 1		// 0, no ca channels in spine, 
					//1, yes ca channels in spine (non-synaptic)
	int NMDABufferMode = 0          // 1, connect both NMDA and AMPA calcium to NMDA_buffer
                                     // 0, connect only NMDA currents to NMDA_buffer

/********allows for changing NMDA subunit easily*************/
include MScell/parametersA_D1.g


=== Following is the header of samples/156260/striatalnetwork/MScell/MScellSpine.g ===
//genesis
//MScellSpine.g
//This routine takes the MScell without synapses, and adds synapses

include MScell/MScell.g                 //MScell without synapses
include MScell/SynParams.g               //parameters on synaptic channels
include MScell/channels/nmda_channel.g   //function to make nmda channel, either GHK or not, in library
include MScell/channels/synaptic_channel.g // function to make non nmda synaptic channels in library
include MScell/AddSynapticChannels.g	// contains functions to add channels to compartments
include MScell/spines.g           //creates spines, puts channels & calcium in spines


function make_MS_cell_spine (cellname,pfile)
   str cellname,pfile

   str CompName

   make_MS_cell {cellname} {pfile}

	//************* create synaptic channels in library *********
	pushe /library

  	make_synaptic_channel  {AMPAname} {AMPAtau1} {AMPAtau2} {AMPAgmax} {EkAMPA}
  	make_NMDA_channel    {NMDAname} {EkNMDA} {Kmg} {NMDAtau2} {NMDAgmax} {ghk_yesno}
	make_synaptic_channel  {GABAname} {GABAtau1} {GABAtau2} {GABAgmax} {EkGABA}


	make_spines

        pope {cellname}
	
   //********************* end synaptic channels in library **************


  //**************SPINES*************************/
    /* these functions needs to be modified.  The following 3 should be optional
        1. allow for putting synaptic channels on spines in library
        2. use new calcium functions and optionally create such in spine
        3. possibly vdep channels in the spines
    */


=== Following is the header of samples/156260/striatalnetwork/MScell/addchans.g ===
//genesis

/***************************		MS Model, Version 5.7	**********************
**************************** 	          adjust.g 			**********************
			Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
*******************************************************************************
	old adjust.g contains two functions add_CaShells, add_uniform_channel
        add_uniform_channel needs connectSKchannel, connectBKKchannel
******************************************************************************/
/*these two functions will be modified when we change the add_CaShells function*/
function connectSKchannel(compPath, caBufferName)
  str compPath
  str caBufferName

  if({isa difshell {compPath}/{caBufferName}}) 
    addmsg {compPath}/{caBufferName} {compPath}/SK_channel CONCEN C
  elif({isa Ca_concen {compPath}/{caBufferName}})
   addmsg {compPath}/{caBufferName} {compPath}/SK_channel CONCEN Ca
  end
end

function connectBKKchannel(compPath, caBufferName)
  str compPath
  str caBufferName

  if({isa difshell {compPath}/{caBufferName}}) 
    addmsg {compPath}/{caBufferName} {compPath}/BKK_channel CONCEN1 C
  elif({isa Ca_concen {compPath}/{caBufferName}})
   addmsg {compPath}/{caBufferName} {compPath}/BKK_channel CONCEN1 Ca
  end
end

include MScell/connectCaChannels.g

//************************ Begin function add_CaShells ************************
/* This function needs modification.  We will need a second function, to which the name of the channel and calcium
   pool is passed to connect them. This alternate approach 
   1. will allow all the ion channels to be created before or after the calcium pools are created 
   2. it will be easier to modify the calcium dynamics model without affecting other parts of the code
   3. it will allow simplication of add_uniform_channels, & include the connectSK and connectBKK functions above.


=== Following is the header of samples/156260/striatalnetwork/MScell/SynParamsTh.g ===
//genesis
//SynParams.g

	str AMPAname = "AMPA"
	float EkAMPA = 0.0
        float AMPAtau1 = 1.1e-3
        float AMPAtau2 = 5.75e-3 
        float AMPAgmax = 0.47e-9  //593e-12 I changed this to make the NMDA/AMPA ratio more like 2.75/1 which is what Ding 2008 finds int corticalstriatal synapses
									//more like 2/1 for thalamus so should be 0.47e-9 for thalamo-striatal syanpnse if NMDA is 0.94e-9 Rebekah Evans 6/25/10
									//really should ampa change or NMDA change to get the right ratio? either NMDA=0.94 and ampa=0.47	
									//or AMPA=0.342 and NMDA = 0.0.684	

									str GABAname = "GABA"
        float GABAtau1 = 0.25e-3    // From Galarreta and Hestrin 1997 
        float GABAtau2 = 3.75e-3    //(used in Wolfs model)
        float EkGABA = -0.060
        float GABAgmax = 750e-12  //Modified Koos 2004 (Wolf uses 435e-12)

	int GABA2Spine = 0                                // = 0, No GABA; 
                                                  //   1, add GABA to spine head
                                                  //   2, add GABA to spine neck
	
	int addCa2Spine = 1		// 0, no ca channels in spine, 
					//1, yes ca channels in spine (non-synaptic)
	int NMDABufferMode = 0          // 1, connect both NMDA and AMPA calcium to NMDA_buffer
                                     // 0, connect only NMDA currents to NMDA_buffer

float useAMPANMDAGHKchannels= 0  // we do not use GHK project for NMDA/AMPA

setclock 0 5e-6 //was 5e-6
        // Simulation time step (Second)       
setclock 1 2e-5        //  time step for ascii output
//setclock 1 1e-4 // time step for graphic output


// parameters for NMDA subunits


// cortex
str	    subunit = "Thalamus"


=== Following is the header of samples/156260/striatalnetwork/MScell/MScell_D1.g ===
//genesis

/***************************		MS Model, Version 5.11	**********************
**************************** 	      	MS_cell.g 			***************
Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
*************************
	MS_cell.g has only one externally called function: make_MS_cell. That primary 
	function uses the services of the following two local subroutines:
		set_position
		add_channels

******************************************************************************/

include MScell/globals  		// Defines & initializes cell specific parameters

include MScell/addchans	// provides access to add_uniform_channel & add_CaShells 
					// as required by local subroutine add_channels
include MScell/proto  // provides access to make_prototypes required by primary
					// routine make_MS_cell
    	
//************************ Begin Local Subroutines ****************************
//*****************************************************************************

	//************************ Begin function set_position *********************
	//**************************************************************************
	function set_position (cellpath)
		//********************* Begin Local Variables ************************
 		str compt, cellpath
 		float dist2soma,x,y,z
 		//********************* End Local Variables *****************************
 		
 		if (!{exists {cellpath}})
  			echo The current input {cellpath} does not exist (set_position) 
  			return
 		end
 
 		foreach compt ({el {cellpath}/##[TYPE=compartment]})
     		  x={getfield {compt} x}
     		  y={getfield {compt} y}
     		  z={getfield {compt} z}


=== Following is the header of samples/156260/striatalnetwork/MScell/MScell08CM3_D1.p ===
//***************************		MS Model, Version 5.0	**********************
//*************************** 	      MScell.p 			**********************
//			Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-836
//*****************************************************************************

*relative
*cartesian
*asymmetric
*lambda_warn

*set_global ELEAK -0.070
//*set_global RA 1.0 
//*set_global RM 8.695652 1.8
*set_global RM 2.7
//*set_global CM 0.010 
//change Cm to account for no spines - make 3x higher?
*set_global CM 0.02  
*set_global EREST_ACT -0.085

*start_cell /library/tert_dend
tert_dend none 35.927 0 0 0.80
tert_dend2 . 35.927 0 0 0.80 
tert_dend3 . 35.927 0 0 0.80
tert_dend4 . 35.927 0 0 0.80
tert_dend5 . 35.927 0 0 0.80 
tert_dend6 . 35.927 0 0 0.80
tert_dend7 . 35.927 0 0 0.80 
tert_dend8 . 35.927 0 0 0.80
tert_dend9 . 35.927 0 0 0.80
tert_dend10 . 35.927 0 0 0.80
tert_dend11 . 35.927 0 0 0.80
*makeproto /library/tert_dend

*start_cell /library/sec_dend

sec_dend none 24.230 0 0 1.100
*makeproto /library/sec_dend

*start_cell /library/prim_dend



=== Following is the header of samples/156260/striatalnetwork/MScell/parametersA_D2.g ===
// genesis

float useAMPANMDAGHKchannels= 0  // we do not use GHK project for NMDA/AMPA

setclock 0 5e-6 //was 5e-6
        // Simulation time step (Second)       
setclock 1 2e-5        //  time step for ascii output
//setclock 1 1e-4 // time step for graphic output


// parameters for NMDA subunits


// NR2A
str	    subunit = "NR2A"
float   EkNMDA   = 0
float	Kmg       = 3.57
float	NMDAtau2      = (112e-3)/2 	// 50e-3 changed to 112 to include 25%NR2B NR2A average from (Vicini et al., 1998 figure 1B)
float	NMDAgmax      = 0.39e-9      //  NR2A and B from (Moyner et al., 1994 figure 7) //0.94e-9 - NMDA
int ghk_yesno=0

str NMDAname = {subunit}

//for saving info on distal or proximal dendrites or massed and spaced. formula typeof dend, # of spines.




=== Following is the header of samples/156260/striatalnetwork/MScell/MScellSyn_D2.g ===
//genesis
//MScellSyn.g
//This routine takes the MScell without synapses, and adds synapses

include MScell/MScell_D2.g                 //MScell without synapses
include MScell/SynParams_D2.g               //parameters on synaptic channels
include MScell/channels/nmda_channel.g   //function to make nmda channel, either GHK or not, in library
include MScell/channels/synaptic_channel.g // function to make non nmda synaptic channels in library
include MScell/AddSynapticChannels.g	// contains functions to add channels to compartments

function makeMScellSyn (cellname,pfile)
   str cellname,pfile

   str CompName

   make_MS_cell {cellname} {pfile}

	//************* create synaptic channels in library *********
	pushe /library

  	make_synaptic_channel  {AMPAname} {AMPAtau1} {AMPAtau2} {AMPAgmax} {EkAMPA}
  	make_NMDA_channel    {NMDAname} {EkNMDA} {Kmg} {NMDAtau2} {NMDAgmax} {ghk_yesno}
	make_synaptic_channel  {GABAname} {GABAtau1} {GABAtau2} {GABAgmax} {EkGABA}

        pope {cellname}
	
   //********************* end synaptic channels in library **************

      foreach CompName ({el {cellname}/##[TYPE=compartment]}) 
        addNMDAchannel {CompName} {NMDAname} {CA_BUFF_3} {NMDAgmax} {ghk_yesno}
        addSynChannel  {CompName} {AMPAname} {AMPAgmax}
        addSynChannel  {CompName} {GABAname} {GABAgmax}
      end
  ce /

end


=== Following is the header of samples/156260/striatalnetwork/MScell/addoutput.g ===
//addoutput.g
	// function for saving parameter in ascii file.  
	//function is made and called in this file
	
//make function 

function sav_disk_asc(diskpath,srcpath,field)
    create asc_file /output/{diskpath}
    setfield /output/{diskpath}   flush 1  leave_open 1 append 1 \
          float_format %0.6g
    useclock /output/{diskpath} 0
    setfield /output/{diskpath} filename output/{diskpath}
    addmsg {srcpath} /output/{diskpath}  SAVE {field}
    call /output/{diskpath} OUT_OPEN
    call /output/{diskpath} OUT_WRITE "time #1" //header
    echo {diskpath}
end
		
		
		
//call function
	
	/*******************save soma information****************************************************
		//sav_disk_asc somaVm{subunit}{stimtype} {cellpath}/soma Vm
	*******************************************************************************************/
	
	/*******************save secondary dendrite parameters**************************************
		//sav_disk_asc dendCa{subunit}{stimtype} {cellpath}/secdend3/{CalciumBuffer_3} Ca  
		//sav_disk_asc NMDACa{subunit}{stimtype} {cellpath}/secdend3/spine_1/head/buffer_NMDA Ca
		//sav_disk_asc spineCa{subunit}{stimtype} {cellpath}/secdend3/spine_1/head/SpineCa Ca
		//sav_disk_asc LspineCa{subunit}{stimtype} {cellpath}/secdend3/spine_1/head/SpineCaL Ca
		//sav_disk_asc Ikblock{subunit}{stimtype} {cellpath}/secdend3/spine_1/head/{subunit}/block Ik
		//sav_disk_asc spineVm{subunit}{stimtype} {cellpath}/secdend3/spine_1/head Vm
	*******************************************************************************************/
 
	/******************save tertiary dendrite information****************************************
		sav_disk_asc dendCa{subunit}{stimtype}3 {cellpath}/tertdend3/{CalciumBuffer_3} Ca
	//	sav_disk_asc spineCa{subunit}{stimtype}3 {cellpath}/tertdend3/tert_dend5/spine_1/head/buffer_NMDA
	//	sav_disk_asc Ikblock{subunit}{stimtype}3 {cellpath}/tertdend3/tert_dend5/spine_1/head/{subunit}/block Ik Ca
	//	sav_disk_asc spineVm{subunit}{stimtype}3 {cellpath}/tertdend3/tert_dend5/spine_1/head Vm


=== Following is the header of samples/156260/striatalnetwork/MScell/SynParams_D2.g ===
//genesis
//SynParams.g

	str AMPAname = "AMPA"
	float EkAMPA = 0.0
        float AMPAtau1 = 1.1e-3
        float AMPAtau2 = 5.75e-3 
        float AMPAgmax = 87.2e-12 //593e-12 keeping with 2.75/1 NMDA/AMPA ratio

        str GABAname = "GABA"
        float GABAtau1 = 0.25e-3    // From Galarreta and Hestrin 1997 
        float GABAtau2 = 3.75e-3    //(used in Wolfs model)
        float EkGABA = -0.060
        float GABAgmax = 900e-12  //750e-12Modified Koos 2004 (Wolf uses 435e-12)

	int GABA2Spine = 1                                // = 0, No GABA; 
                                                  //   1, add GABA to spine head
                                                  //   2, add GABA to spine neck
	
	int addCa2Spine = 1		// 0, no ca channels in spine, 
					//1, yes ca channels in spine (non-synaptic)
	int NMDABufferMode = 0          // 1, connect both NMDA and AMPA calcium to NMDA_buffer
                                     // 0, connect only NMDA currents to NMDA_buffer

/********allows for changing NMDA subunit easily*************/
include MScell/parametersA_D2.g


=== Following is the header of samples/156260/striatalnetwork/MScell/spines.g ===
//spines.g for including spines in the MSN model.

include MScell/AddCaSpines.g

//****************make the spines************************************

function make_spines

float surf_neck, vol_neck, len_neck, dia_neck,dia_head,len_head,dia_head, surf_head,vol_head, shell_thick, dia_shell, shell_head, Ca_tau, kB, kE,r,Ca_base  

//int shellmode                                      
str buffer1 = "spineCa"          // name of the calcium pool in the spine
str buffer2   = "spineCaL"
str buffer3 = "buffer_NMDA"         // only to record NMDA-dependent [Ca]

// parameters:
       // for spine neck:
       len_neck=1e-6                               //0.16-2.13
       dia_neck=0.1e-6                             //(0.038-0.46)e-6
       // for spine head:
       dia_head=0.5e-6                              //adopt common size, no exact data are available now
       len_head=0.5e-6
       surf_head=dia_head*len_head*{PI}
       surf_neck=len_neck*dia_neck*{PI}
       // for calcium shells:
       shell_thick=0.1e-6
       dia_shell= dia_head - shell_thick*2
       shell_head={PI}*(dia_head*dia_head-dia_shell*dia_shell)/4


       kE =86.0                                   // Cater and Sabatini, 2004
       Ca_tau = 25.0e-3                            
       r= (1+kE)/Ca_tau
       Ca_base = 50e-6                            // baseline: 50 nM

//  vol_neck={len_neck*dia_neck*dia_neck*PI/4.0}
  if (!{exists spine})
     create compartment spine
  end



=== Following is the header of samples/156260/striatalnetwork/MScell/MScellSpineCtx.g ===
//genesis
//MScellSpine.g
//This routine takes the MScell without synapses, and adds synapses

include MScell/MScell.g                 //MScell without synapses
include MScell/SynParamsCtx.g               //parameters on synaptic channels
include MScell/channels/nmda_channel.g   //function to make nmda channel, either GHK or not, in library
include MScell/channels/synaptic_channel.g // function to make non nmda synaptic channels in library
include MScell/AddSynapticChannels.g	// contains functions to add channels to compartments
include MScell/spines.g           //creates spines, puts channels & calcium in spines


function make_MS_cell_spine (cellname,pfile)
   str cellname,pfile

   str CompName

   make_MS_cell {cellname} {pfile}

	//************* create synaptic channels in library *********
	pushe /library

  	make_synaptic_channel  {AMPAname} {AMPAtau1} {AMPAtau2} {AMPAgmax} {EkAMPA}
  	make_NMDA_channel    {NMDAname} {EkNMDA} {Kmg} {NMDAtau2} {NMDAgmax} {ghk_yesno}
	make_synaptic_channel  {GABAname} {GABAtau1} {GABAtau2} {GABAgmax} {EkGABA}


	make_spines

        pope {cellname}
	
   //********************* end synaptic channels in library **************


  //**************SPINES*************************/
    /* these functions needs to be modified.  The following 3 should be optional
        1. allow for putting synaptic channels on spines in library
        2. use new calcium functions and optionally create such in spine
        3. possibly vdep channels in the spines
    */


=== Following is the header of samples/156260/striatalnetwork/MScell/MScell_D2.g ===
//genesis

/***************************		MS Model, Version 5.11	**********************
**************************** 	      	MS_cell.g 			***************
Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
*************************
	MS_cell.g has only one externally called function: make_MS_cell. That primary 
	function uses the services of the following two local subroutines:
		set_position
		add_channels

******************************************************************************/

include MScell/globals  		// Defines & initializes cell specific parameters

include MScell/addchans	// provides access to add_uniform_channel & add_CaShells 
					// as required by local subroutine add_channels
include MScell/proto  // provides access to make_prototypes required by primary
					// routine make_MS_cell
    	
//************************ Begin Local Subroutines ****************************
//*****************************************************************************

	//************************ Begin function set_position *********************
	//**************************************************************************
	function set_position (cellpath)
		//********************* Begin Local Variables ************************
 		str compt, cellpath
 		float dist2soma,x,y,z
 		//********************* End Local Variables *****************************
 		
 		if (!{exists {cellpath}})
  			echo The current input {cellpath} does not exist (set_position) 
  			return
 		end
 
 		foreach compt ({el {cellpath}/##[TYPE=compartment]})
     		  x={getfield {compt} x}
     		  y={getfield {compt} y}
     		  z={getfield {compt} z}


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/gaba_channel.g ===
//genesis
//gaba_channel.g

function make_GABA_channel

   str chanpath = "GABA_channel"
   // From Galarreta and Hestrin 1997 (used in Wolfs model)
   float tau1 = 0.25e-3
   float tau2 = 3.75e-3

   float gmax = 750e-12  //Modified Koos 2004 (Wolf uses 435e-12)
   float Ek = -0.060

	echo "XXXXXXXXXXXXXXX make_GABA_channel XXXXXXXXXXXXXXXX"
	echo "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
	echo "XXXXXXXXXXXXXXX make_GABA_channel XXXXXXXXXXXXXXXX"

   create synchan {chanpath}

   setfield {chanpath} tau1 {tau1} \
                       tau2 {tau2}\ 
                       gmax {gmax}\
                        Ek {Ek}

end




=== Following is the header of samples/156260/striatalnetwork/MScell/channels/tabchanforms.g ===
/*form call file for creating tab channels*/


function exp_form (rate, slope, V)
	float rate,slope,V
	//equation is ({rate} *(exp (-{V}/{slope}) ))
	float numx ={{-V}/{slope}}
	float expx = {exp {numx}}
	float entry = ({rate}*{expx})
	return {entry}
end

function sig_form (rate, vhalf, slope, V)
	float rate, vhalf, slope, V
	//equation is ({rate}/(exp ({{V}-{vhalf}}/{slope})+1))
	//rate/(EXP((v-vhalf)/slope)+1)
	float numx = {{{V}-{vhalf}}/{slope}}
	float expx = {exp {numx}}
	float entry = ({rate}/{{expx}+1})
	return {entry}
end

function lin_form (rate, vhalf, slope, V)

	float rate, vhalf, slope, V
	//equation is (({rate}*({V}-{vhalf}))/{exp ({v}-{vhalf}/{slope})-1)})
	float numx = {{{{V}-{vhalf}}/{slope}}-1}
	float expx = {exp {numx}}
	float numerator = {{rate}*{{V}-{vhalf}}}
	float entry = {{numerator}/{expx}}
	return {entry}
	// put in check for if v=vhalf then add 0.0001 or something. or... dtop/dbottom is L'Hopital.  
	
end


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/kIR_chanKD.g ===
//genesis

function make_KIR_channel

 float Erev       = -0.09      // V

    
    str path = "KIR_channel" 

    float xmin  = -0.15  /* minimum voltage we will see in the simulation */     // V
    float xmax  = 0.05  /* maximum voltage we will see in the simulation */      // V
    int xdivsFiner = 4000
    int c = 0


 	 /****** Begin vars used to enable genesis calculations ********/
   float increment = (xmax - xmin)*1e3/xdivsFiner  // mV
   echo "KIR increment:" {increment} "mV"
   float x = -150.00 
   float minf       = 0
   float hinf       = 0
   float mvhalf     = -52.0      // mV
   float mshift     = 50.0      // 30, mV
   float mslope     = 13.0      // mV
   float taum       = 0         // ms
   float tauh       = 0         //  ms
  	 /****** End vars used to enable genesis calculations **********/ 	 
  	 
  	  
    create tabchannel {path} 
    call {path} TABCREATE X {xdivsFiner} {xmin} {xmax}  // activation   gate
//    call {path} TABCREATE Y {xdivsFiner} {xmin} {xmax}  // inactivation gate, no longer used


 float qfactor = 0.5    // to match in vitro data, Wolf,et.al.2005
 create table  kir_taum                    // ms
 call  kir_taum  TABCREATE 20 {xmin} {xmax}
//the table corresponds to -150 mV to 50 mV, digitally extracted from JE Steephen,et.al. 2008, fig1
 setfield kir_taum table->table[0] 0.2    \
                    table->table[1] 0.2    \


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/kAs_chanRE.g ===
//genesis

/***************************		MS Model, Version 6	*********************
**************************** 	    	KaS_channel.g 			*********************
						Rebekah Evans rcolema2@gmu.edu	
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/

/* K A-type Slow channel
 * This is a tab channel created from Kv1.2 channel data in Shen 2004.
 * They are using dissociated medium spiny neurons, and did not specify recording temperature, so I am assuming room temp.
 * Our data matching process showed that the original model from Johanes Hjorth via Kai Du and Tom Sheehan matched closely with the
 * activation (minf) curve, but the activation tau curve was almost the opposite of the data.  The KaS channel does not completely
 * inactivate according to the Shen data and the model they have made to match their data.  Johannes accounted for this by making two
 * KaS channels one that inactivated and one that didn't and adjusted their conductances accordingly.  However, it will be faster to 
 * have just one channel that partially inactivates.  This new tab channel uses Alphas and Betas obtained by matching the model curves in Shen 2004 
 * figure 6.   m is to the power of 2 in the previous code, I have not re-checked wolf yet to see if that's what it is there.
 * Note that to distinguish these updated channels from the old, the file is now called KaS_chan.g (instead of KaS_channel.g) and the
 * function is called make_KaS_chan.  
 * *************** Rebekah Evans 02/15/10 rcolema2@gmu.edu ********************************/
/* AB: qfactor of 2 used instead of 3 in previous channel */


function make_KAs_channel
   //include tabchanforms
  //initial parameters for making tab channel
	float Erev = -0.09
	int m_power = 2
        int h_power = 1
	
//Activation constants for alphas and betas (obtained by matching Tkatch 2000)
	float mA_rate = 0.25 //units msec
	float mA_vhalf = 50
	float mA_slope = -20
	
	float mB_rate = 0.05 //units msec
	float mB_vhalf = -90
	float mB_slope = 35
		


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/nmda_channel.g ===
//genesis
//nmda_channel.g

function make_NMDA_channel (chanpath, Ek, KMg, tau2, gmax, ghk)

  str chanpath //what you want the channel to be called (full path)
  float KMg, tau2, gmax  //parameters that differ between NR2A, B, C and D subunits
  
  float Ek
  int ghk 
  
  float tau1 = (4.4624e-3)/2 //  DE Chapman et al 2003, table 1 (12.13/e=5.63ms)
  float CMg = 1  // [Mg] in mM

  float eta = 1/3.57  // per mM
  float gamma = 62  // per Volt

	echo "XXXXXXXXXXXXXXX make_NMDA_channel XXXXXXXXXXXXXXXX"
	echo "chanpath = "{chanpath}
	echo "caBuffer = "{Ek}
	echo "KMg = "{KMg}
	echo "tau2 = "{tau2}
	echo "gmax = "{gmax}
	echo "XXXXXXXXXXXXXXX make_NMDA_channel XXXXXXXXXXXXXXXX"

	create synchan {chanpath}
	setfield {chanpath} \
          Ek   {Ek}   \
          tau1 {tau1} \
          tau2 {tau2} \
          gmax {gmax/2}
   
//the kinetics of the magnesium block is different for different subunits.  
// NR2A and B are about the same, but C and D are much less affected by the block.  
//these numbers were used because the made the magnesium block curve fit the figures by Moyner et al (1994 figure 7) best by eye.

  create Mg_block {chanpath}/block
  setfield {chanpath}/block CMg {CMg} 
  setfield {chanpath}/block KMg_B {1.0/{gamma}}
  setfield {chanpath}/block KMg_A {KMg}


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/kAf_chanRE.g ===
//genesis

/***************************		MS Model, Version 6	*********************
**************************** 	    	kAf_chanRE.g 			*********************
						Rebekah Evans rcolema2@gmu.edu	
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/


/* K A-type Fast channel
 *  * This is a tab channel created from KAf channel data in Tkatch 2000.
 * They are using dissociated medium spiny neurons, and did not specify recording temperature, so I am assuming room temp.
 * Our data matching process showed that the original model from Johanes Hjorth via Kai Du and Tom Sheehan matched closely with the
 * activation and inactivation inf curves, but did not match the activation tau curve very well. This new tab channel uses Alphas and 
 * Betas obtained by matching both the activation inf and tau curves.  The m power according to wolf is 2 (didn't find in Tkatch)
 * The inactivation curve matched well, and the inactivation tau is constant according to wolf (did not see this in Tkatch either). 
*inactivation has been updated with voltage dependence more consistent with current clamp data
 * *************** Rebekah Evans 02/07/10 rcolema2@gmu.edu ********************************/
/*inactivation has been updated with voltage dependence more consistent 
with current clamp data *** Rebekah Evans Aug 2010 rcolema2@gmu.edu **/


function make_KAf_channel
   //include tabchanforms
  //initial parameters for making tab channel
	float Erev = -0.09
	int m_power = 2
        int h_power = 1
	
//Activation constants for alphas and betas (obtained by matching Tkatch 2000)
//units are mV, ms
	float mA_rate = 1.5
	float mA_vhalf = 4
	float mA_slope = -17
	
	float mB_rate = 0.6
	float mB_vhalf = 10
	float mB_slope = 9
		


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/synaptic_channel.g ===
//genesis
//synaptic_channel.g

function make_synaptic_channel (chanpath, tau1, tau2, gmax, Ek)
   str chanpath
   float tau1
   float tau2
   float gmax 
   float Ek

	echo "XXXXXXXXXXXXXXX make_synaptic_channel XXXXXXXXXXXXXXXX"
	echo "chanpath = "{chanpath}
	echo "tau1 = "{tau1}
	echo "tau2 = "{tau2}
	echo "gmax = "{gmax}
	echo "XXXXXXXXXXXXXXX make_synaptic_channel XXXXXXXXXXXXXXXX"

   create synchan {chanpath}

   setfield {chanpath} tau1 {tau1} \
                       tau2 {tau2}\ 
                       gmax {gmax}\
                        Ek {Ek}

end




=== Following is the header of samples/156260/striatalnetwork/MScell/channels/SKchannelCaDep.g ===
//genesis

/***************************		MS Model, Version 5.0	*********************
**************************** 	    	SKchannelCaDep.g 		*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/


/*************************** SKchannelCaDep.g *************************************
 *	In the original program written by Johanes Hjorth a MatLab routines in 
 * striatum/mspn/table/CaDepCurrents/makeSKCaDepTables.m opened two text (data)
 * files {SKgate.txt & Skinfo.txt and used those to create a set of of text (data)
 * files in striatum/mspn/channels/table/CaDepCurrents"
 * The product of this sequence was then opened by this genesis routine to populate 
 * a set of tabchannels.
 *
 * In the rework by Kai_Du the MatLab files are removed but their product (the data 
 * files) are retained.
 *
 * This revision moves the MatLab calculations to the .g file that is creating
 * the tabchannel and removes the data files. 
 * The comments below are from Hjorth 
		// This is a simplified implementation of the SK channel without voltage
		// dependence. Reference: MaylieBondHersonLeeAdelman2004
		// Fast component has tau=4 ms, slow tau = 70 ms (rough ranges)
 * End Hjorth comments
 
 *************** Tom Sheehan 2/8/09	703-538-8361********************************/

function make_SK_channel

  	int i	= 5
  	int nStep = 1000
  	float SKact = 0.0
  	float CaMax = 0.002
	float theta = 0.0
	float theta_pow = 0.0	
  	float CaMax = 0.002
  	int nStep = 1000


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/CaNinact_channel.g ===
//genesis

/***************************		MS Model, Version 5.2	*********************
**************************** 	  		CaN_channel.g 			*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/
/*AB
This channel combines both the inactivating and non-inactivating CaN channels
It has a smaller qfactor to produce a slower channel
*/
function create_CaN
	str chanName = "CaN_channel"
	str compPath = "/library"

	int c	
	float x = -0.1
	int xdivs = 3000
	float xmin = -0.1
	float xmax = 0.05
        float increment ={{xmax}-{xmin}}/{xdivs}
        echo "CaN increment:" {increment} "V"
  	float mPower = 1.0
  	float hPower = 1.0

	float mvHalfCaN = -8.7e-3
	float mkCaN = -7.4e-3
	float hvHalfCaN = -74.8e-3
	float hkCaN = 6.5e-3
	float mTauCaN = 0.0
	float mInfCaN = 0.0
	float hTauCaN = 2.333e-002
	float hInfCaN = 0.0

	float theta	= 0.0
	float theta_1 = 0.0
	float beta	= 0.0
	float beta_exp	= 0.0
	float mA	= 0.0
	float mB	= 0.0


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/BKKchannel.g ===
//genesis

/***************************		MS Model, Version 5.0	*********************
**************************** 	    	BKKchannel.g 			*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/

//==========================================================================
// /* non-inactivating BK-type Ca-dependent K current
// ** Moczydlowski and Latorre 1983, J. Gen. Physiol. 82:511-542.
// ** Implemented by Erik De Schutter BBF-UIA,
// ** with original parameters scaled for units: V, sec, mM. 
// ** Assumes tab2Dchannel "KC" has a sibling Ca_concen "Ca_conc". 
// ** Temprature is modified to be 35C                                      */

// //=======================================================================

function make_BKK_channel
    float EK=-0.9  // V
  //  int xdivs = 299
    int xdivs = 299
    int ydivs = {xdivs}
    float xmin, xmax, ymin, ymax
    xmin = -0.1; xmax = 0.05; ymin = 0.0; ymax = 0.005 // x = Vm, y = [Ca],mM
    int i, j
    float x, dx, y, dy, a, b
    float Temp = 35
    float ZFbyRT = 23210/(273.15 + Temp)
    if (!({exists BKK_channel}))
        create tab2Dchannel BKK_channel
        setfield BKK_channel Ek {EK} Gbar 0.0  \
            Xindex {VOLT_C1_INDEX} Xpower 1 Ypower 0 Zpower 0
        call BKK_channel TABCREATE X {xdivs} {xmin} {xmax} \
            {ydivs} {ymin} {ymax}
    end
    dx = (xmax - xmin)/xdivs
    dy = (ymax - ymin)/ydivs
    x = xmin
    for (i = 0; i <= xdivs; i = i + 1)


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/K_DR_channel.g ===
//genesis

/***************************		MS Model, Version 5.11	**********************
**************************** 	      	K_DR_channel.g 	**********************
Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************/
/* AB: replaced q10 with qfactor, which now modifies time constants of channels
* qfactor=0.5 means that channels have been slowed down to produce wider spikes
*/

//************************ Begin Primary Routine ******************************
//*****************************************************************************
function make_K_DR_channel
	//********************* Begin Local Variables ******************************
   float xmin = -0.1
   float xmax = 0.05
   int xdivs = 3000
   float x,dx,alpha_m,beta_m,tau_m,m_inf
   int i
   float  qfactor = 0.5   
   float Erev = -0.09    
	//********************* End Local Variables ********************************

 	if ({exists K_DR})
		echo "K_DR tabchannel exists"
   	return
 	end
 
 	create tabchannel K_DR 
  	setfield ^ Ek {Erev} 	\
             Gbar 100.0 	\ 
             Ik 0        	\
             Gk 0        	\
             Xpower 1    	\
             Ypower 0    	\
             Zpower 0 

  	call K_DR TABCREATE X {xdivs} {xmin} {xmax}
        dx = (xmax-xmin)/xdivs
        x = xmin


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/ampa_channel.g ===
//genesis
//ampa_channel.g

function make_AMPA_channel(chanpath)
   str chanpath

   // Values from Wolfs model, original data Gotz et al 1997 (from NA),
   // Chapman et al 2003
   float tau1 = 1.1e-3
   float tau2 = 5.75e-3 

   float gmax = 593e-12
   float Ek = 0.0

	echo "XXXXXXXXXXXXXXX make_AMPA_channel XXXXXXXXXXXXXXXX"
	echo "chanpath = "{chanpath}
	echo "XXXXXXXXXXXXXXX make_AMPA_channel XXXXXXXXXXXXXXXX"

   create synchan {chanpath}

   setfield {chanpath} tau1 {tau1} tau2 {tau2} gmax {gmax} Ek {Ek}

end


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/CaR_channel.g ===
//genesis

/***************************		MS Model, Version 5.2	*********************
**************************** 	  		CaR_channel.g 			*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
max cond is now a parameter in globals, though use in this function is irrelevant
******************************************************************************/

function create_CaR
	str chanName = "CaR_channel"
	str compPath = "/library"

	int c = 0	
	int xdivs = 3000

	float x = -0.1
	float xmin = -0.1
	float xmax = 0.05
        float increment ={{xmax}-{xmin}}/{xdivs}
        echo "CaR increment:" {increment} "V"
  	float mPower = 1.0
  	float hPower = 1.0

	float mvHalfCaR = -10.3e-3
	float mkCaR     = -6.6e-3
	float hvHalfCaR = -33.3e-3
	float hkCaR     = 17e-3

	float mTauCaR = 1.7e-003
	float mInfCaR = 0.0
	float hTauCaR = 0.0
	float hInfCaR = 0.0

	float surf = 0.0
	float gMax = 2.6e-007

	float theta = 0.0
	float theta_exp = 0.0



=== Following is the header of samples/156260/striatalnetwork/MScell/channels/CaL12inact_channel.g ===
//genesis

/***************************		MS Model, Version 5.2	*********************
**************************** 	    	CaL12channel.g 		*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/
/*AB
This channel combines both the inactivating and non-inactivating CaL12 channels
It has a smaller qfactor to produce a slower channel
*/

function create_CaL12
	str chanName = "CaL12_channel"
	str compPath = "/library"
	int c

	float xmin = -0.1
	float xmax = 0.05
	int 	xdivs = 3000
	float mPower = 1.0
	float hPower = 1.0
	
        float increment ={{xmax}-{xmin}}/{xdivs}
        echo "CaL12 increment:" {increment} "V"
	float x = -0.1
  	float surf = 0
 	float gMax = 0

	float hTauCaL12 	= 1.477e-002
	float mTauCaL12 	= 0.0
	float mvHalfCaL12 = -8.9e-3
	float mkCaL12     = -6.7e-3
	float hvHalfCaL12 = -13.4e-3
	float hkCaL12     = 11.9e-3
	float hInfCaL12	= 0.0
	float mInfCaL12	= 0.0

	float theta	= 0.0
	float beta	= 0.0


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/CaL13_channel.g ===
//genesis

/***************************		MS Model, Version 5.2	*********************
**************************** 	  CaL13_channel.g 	*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
*****************************************************************************
AB: qfactor decreased to 2 by Rebekah Evans for wider AP Aug 2010
******************************************************************************/

function create_CaL13_D1
	str chanName = "CaL13_channel_D1"
	str compPath = "/library"

	int c
	float x = -0.1
	int xdivs = 3000
	float xmin = -0.1
	float xmax = 0.05
        float increment ={{xmax}-{xmin}}/{xdivs}
        echo "CaL13 increment:" {increment} "V"
  	float mPower = 2.0
  	float hPower = 1.0
  
	float hTauCaL13 	= 1.477e-002
	float mTauCaL13 	= 0.0
	float mvHalfCaL13 = -43.0e-3  //-33e-3
	float mkCaL13     = -6.7e-3
	float hvHalfCaL13 = -13.4e-3
	float hkCaL13     = 11.9e-3
	float hInfCaL13	= 0.0
	float mInfCaL13	= 0.0

	float theta	= 0.0
	float beta	= 0.0
	float beta_exp	= 0.0
	float mA	= 0.0
	float mB	= 0.0
  	float surf = 0
	float qFactCaL13 	= 2
 	float gMax = 4.25e-009


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/CaT_channel.g ===
//genesis

/***************************		MS Model, Version 5.2	*********************
**************************** 	  		CaT_channel.g 			*********************
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
max cond is now a parameter in globals, though use in this function is irrelevant
******************************************************************************/

function create_CaT
	str chanName = "CaT_channel"
	str compPath = "/library"

	int c = 0	
	float increment = 0.00005	
	float x = -0.1
	int xdivs = 3000
	float xmin = -0.1
	float xmax = 0.05
        float increment ={{xmax}-{xmin}}/{xdivs}
        echo "CaT increment:" {increment} "V"
  	float mPower = 1.0
  	float hPower = 1.0		

  	float mInfCaT = 0.0
	float mvHalfCaT = -51.73e-3;
  	float mkCaT     = -6.53e-3;
  	float hvHalfCaT = -80e-3;
  	float hkCaT     = 6.7e-3;
  	float hInfCaT = 0.0

  	float mTauCaT = 0.0
  	float mInfCaT = 0.0
  	float hTauCaT = 0.0
  	float hInfCaT = 0.0

	float surf = 0.0
	float gMax = 4.0e-009

	float theta = 0.0


=== Following is the header of samples/156260/striatalnetwork/MScell/channels/naF_chanOg.g ===
//genesis

/***************************MS Model, Version 6	*********************
****************************   naF_chan.g 	*********************
						Rebekah Evans rcolema2@gmu.edu	
		Tom Sheehan tsheeha2@gmu.edu	thsheeha@vt.edu	703-538-8361
******************************************************************************
******************************************************************************/

/* Na Fast channel
 * This is a tab channel created from NaF channel data in Martina and Jonas 1997.
 * They are using hippocmpal pyramidal cells and are recording at 22-24 degrees C.
 * there is data from hamster striatal neurons that closely matches, but is slightly less complete (Sieb et al., 2002) 20-21 degrees.
 * Our data matching process showed that the original model from Johanes Hjorth via Kai Du and Tom Sheehan matched closely with the
 * activation and inactivation inf curves, but did not match the tau curves very well. This new tab channel uses Alphas and Betas obtained by
 * matching both the inf (cubed) and tau curves.  
 * Note that to distinguish these updated channels from the old, the file is now called NaF_chan.g (instead of NaF_channel.g) and the
 * function is called make_NaF_chan.  
 * *************** Rebekah Evans 01/23/10 rcolema2@gmu.edu ********************************/

/**********************************************************************************
*******************************Naf channel of MSN**********************************
**ref: Nobukuni Ogata, et.al. 1990
**implemented by Kai Du, kai.du@ki.se
***********************************************************************************/
function make_NaF_channel_D1
float Erev       = 0.05      // V

    
    str path = "NaF_channel_D1" 

    float xmin  = -0.10  /* minimum voltage we will see in the simulation */     // V
    float xmax  = 0.05  /* maximum voltage we will see in the simulation */      // V
    int xdivsFiner = 3000
    int c = 0


 	 /****** Begin vars used to enable genesis calculations ********/
   float increment = (xmax - xmin)*1e3/xdivsFiner  // mV
   echo "naF: increment" {increment} "mV"


=== Following is the header of samples/156260/striatalnetwork/SP_output.g ===
//genesis
//SP_output.g



function makeOutput(cellPath, outputName, plotDt)

    str cellPath
    str outputName
    float plotDt
    str description
    int index

    str fileBasePath = "OUTDATA/"

   str filenameDATA = {fileBasePath}@{outputName}@".data"
// str filenameDATA = "output.data"
//    str outputPath = "/output/"@{outputName}
  str outputPath = {outputName}
    str filenameINFO = {fileBasePath}@{outputName}@".info"
    str cellSoma
/*
    if(!{exists /output})
        echo "Creating /output/"
        create neutral /output/        
    end 
*/
    // Open the file in overwrite mode and write the simulation parameters

    echo "Writing simulation parameters to "{filenameINFO}
/*
    openfile {filenameINFO} w
    
    writefile {filenameINFO} "nParams     2 0" // 2 numbers, 0 strings
    writefile {filenameINFO} "numCells     "{numCells}
    writefile {filenameINFO} "maxTime     "{maxTime}


    // Add info about noise level etc



=== Following is the header of samples/156260/striatalnetwork/IF.g ===
//IF.g
/*
step 0.10 -time
setfield {cellpath}/soma inject 0.5e-9 
step 0.25 -time
setfield {cellpath}/soma inject 0
step 0.1 -time
*/
//setfield /data/soma overlay 1
reset
int i = 0
float inj = 400e-12

for (i=0; i<1; i=i+1)
	echo {inj} = "I inject"
	//step 0.1  -time
	setfield /FSnetwork/FScell[0]/soma inject {inj}
	step 0.5    -time
	setfield /FSnetwork/FScell[0]/soma inject 0.0e-9
	//step 0.2 -time
	inj= {inj}+50.0e-12
	//reset
end


